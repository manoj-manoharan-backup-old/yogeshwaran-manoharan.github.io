[{"title":"Graylog at scale","description":"","link":"https://tech.xing.com/graylog-at-scale-b20aabd55cc4?source=rss----35cb8c78d3cf---4","owner":"WyeWorks"},{"title":"Hash Sharded Indexes Unlock Linear Scaling for Sequential Workloads","description":"I ended an amazing internship this past fall on the KV (Key-Value) team at Cockroach Labs (responsible for the transaction, distribution and replication layers of CockroachDB). This blog post delves into my work on adding native support for creating hash sharded indexes in CockroachDB, as a way to significantly improve performance on sequential workloads.\nCockroachDB uses range partitioning by default, as opposed to hash partitioning. As explained in our CTO Peter Mattis&#x2019;sblog post, a key-value store with range partitioning resembles a distributed balanced tree whereas one with hash partitioning is closer to a distributed hash map.","link":"https://www.cockroachlabs.com/blog/hash-sharded-indexes-unlock-linear-scaling-for-sequential-workloads/","owner":"Cloudflare"},{"title":"The Official Guide to AWS HTTP APIs","description":"There's a lot to learn about the new AWS HTTP APIs and the Serverless Framework so let's bring it all together in one place.","link":"https://serverless.com/blog/official-guide-aws-http-apis/","owner":"Sensible"}]