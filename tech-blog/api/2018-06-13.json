[{"title":"\nRedis Lua scripting: several security vulnerabilities fixed\n","description":"A bit more than one month ago I received an email from the Apple Information Security team. During an auditing the Apple team found a security issue in the Redis Lua subsystem, specifically in the cmsgpack library. The library is not part of Lua itself, it is an implementation of MessagePack I wrote myself. In the course of merging a pull request improving the feature set, a security issue was added. Later the same team found a new issue in the Lua struct library, again such library was not part of Lua itself, at least in the release of Lua we use: we just embedded the source code inside our Lua implementation in order to provide some functionality to the Lua interpreter that is available to Redis users. Then I found another issue in the same struct package, and later the Alibaba team found many other issues in cmsgpack and other code paths using the Lua API. In a short amount of time I was sitting on a pile of Lua related vulnerabilities.\n","link":"\nhttp://antirez.com/news/119\n","owner":"Andrey Akinshin"},{"title":"A Child’s Garden of Inter-Service Authentication Schemes","description":"\n\n<p>Modern applications tend to be composed from relationships between smaller applications. Secure modern applications thus need a way to express and enforce security policies that span multiple services. This is the “server-to-server” (S2S) authentication and authorization problem (for simplicity, I’ll mash both concepts into the term “auth” for most of this post).</p>\n\n<p>Designers today have a lot of options for S2S auth, but there isn’t much clarity about what the options are or why you’d select any of them. Bad decisions sometimes result. What follows is a stab at clearing the question up.</p>\n\n<h2 id=\"cast-of-characters\">Cast Of Characters</h2>\n\n<p>Alice and Bob are services on a production VPC. Alice wants to make a request of Bob. How can we design a system that allows this to happen?</p>\n\n<p>Here’s, I think, a pretty comprehensive overview of available S2S schemes. I’ve done my best to describe the “what’s” and minimize the “why’s”, beyond just explaining the motivation for ","link":"https://latacora.micro.blog/a-childs-garden/","owner":"Kolosek"},{"title":"Mapping Volumes Or Passing Environment Variables To Containerized Docker Applications","description":"\n                    <p>If you&rsquo;ve ever worked with <a href=\"https://www.docker.com/\">Docker</a> containers you&rsquo;ve probably been exposed to them being stateless, meaning when a container is destroyed, all record of it is lost including any files it might have created. Not great if you&rsquo;re working with say a database, correct? However, let&rsquo;s look at this from a different angle. Let&rsquo;s say you are deploying a web application that requires some configuration. Depending on how you&rsquo;ve developed it, the configuration could be controlled via a file or via environment variables. How do you accommodate this with Docker container deployments when you don&rsquo;t want these configurations baked into the image?</p>\n<p>We&rsquo;re going to see how to work with volume mapping between container and host machines as well as passing environment variables at container deployment with <a href=\"https://www.docker.com/\">Docker</a>.</p>\n                    \n                 ","link":"https://www.thepolyglotdeveloper.com/2018/06/mapping-volumes-passing-environment-variables-containerized-docker-applications/","owner":"Nelson Elhage"}]