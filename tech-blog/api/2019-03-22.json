[{"title":"\nRedis streams as a pure data structure\n","description":"The new Redis data structure introduced in Redis 5 under the name of “Streams” generated quite some interest in the community. Soon or later I want to run a community survey, talking with users having production use cases, and blogging about it. Today I want to address another issue: I’m starting to suspect that many users are only thinking at Streams as a way to solve Kafka(TM)-alike use cases. Actually the data structure was designed to *also* work in the context of messaging with producers and consumers, but to think that Redis Streams are just good for that is incredibly reductive. Streaming is a terrific pattern and “mental model” that can be applied when designing systems with great success, but Redis Streams, like most Redis data structures, are more general, and can be used to model dozen of different unrelated problems. So in this blog post I’ll focus on Streams as a pure data structure, completely ignoring its blocking operations, consumer groups, and all the messaging parts.","link":"\nhttp://antirez.com/news/128\n","owner":"Andrey Akinshin"},{"title":"Making Websites Work with Windows High Contrast Mode","description":"","link":"http://engineering.khanacademy.org/posts/windows-high-contrast-mode.htm","owner":"Just Eat"}]