[{"title":"Authenticate A Golang API With JSON Web Tokens","description":"\n                    <p>Over the past few weeks I’ve been doing a lot of investigation into JSON Web Tokens (JWT) for authentication in APIs. If you’ve been keeping up, you’ll remember I wrote about <a href=\"https://www.thepolyglotdeveloper.com/2017/03/jwt-authentication-in-a-node-js-powered-api/\">JWT authentication in a Node.js application</a> as well as <a href=\"https://www.thepolyglotdeveloper.com/2017/03/authenticate-jwt-nativescript-angular-mobile-application/\">building a client facing NativeScript and Angular mobile application</a> that made use of the Node.js backend. This is great, but what if you’re not very fond of JavaScript development?</p>\n<p>We’re going to see how to create a backend API that creates and validates JSON Web Tokens using the Go programming language. This teach us how to create an API that offers an authentication mechanism outside of sessions and cookies, which typically are not available when working with an API.</p>\n                    \n                  ","link":"https://www.thepolyglotdeveloper.com/2017/03/authenticate-a-golang-api-with-json-web-tokens/","owner":"Nic Raboy"}]