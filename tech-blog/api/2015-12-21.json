[{"title":"Using RightLink with Docker","description":"<p>One of the challenges faced by many users deploying Docker on a larger scale\nis keeping track of all the containers that are currently running\nor that were running at some point. In addition, while containers are\nrunning they typically need to be monitored and have application-level\nalerts configured. These two problems are now made simpler by Docker\nintegrations built into new versions of the RightScale RightLink agent.</p>\n\n<p>The RightScale RightLink (version 10) agent is a lightweight agent that\nconnects servers to the RightScale platform and enables remote management,\nmonitoring and other metric collection. Generally, monitoring uses the\nstandard Linux collectd agent, but recent versions of RightLink also incorporate\nsome basic monitoring directly and this now extends to containers.</p>\n\n<h2 id=\"container-inventory\">Container Inventory</h2>\n\n<p>The need for keeping track of the containers running on each server comes\nfrom the fact that a container is in between a virtual machin","link":"http://eng.rightscale.com/2015/12/21/using-rightlink-with-docker.html","owner":"Rightscale"},{"title":"Waiting For A Loop Of Async Functions To Finish In Node.js","description":"\n                    <p>At the moment Node.js is my web development language of choice, but occasionally I come across something that really grinds my gears. I sometimes find that I’ve fallen into an async hell that screws up a lot of things. For example, maybe I’ve designed an API endpoint that makes a few requests to external services. Before returning data to the client (user), manipulations must be done on the external service data requested. How do we do all this?</p>\n<p>Let’s take a look how we would cover these scenarios.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2015/12/waiting-for-a-loop-of-async-functions-to-finish-in-node-js/'>Waiting For A Loop Of Async Functions To Finish In Node.js</a> appeared first on <a rel='nofollow' href='https://www.thepolyglotdeveloper.com'>The Polyglot Developer</a>.</p>\n                    \n                ","link":"https://www.thepolyglotdeveloper.com/2015/12/waiting-for-a-loop-of-async-functions-to-finish-in-node-js/","owner":"Nic Raboy"}]