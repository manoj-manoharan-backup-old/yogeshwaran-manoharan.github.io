[{"title":"Salesforce Tasks and Calendaring, fully integrated with Mixmax","description":"<p>We're excited to announce a bucketload of new integrations to save you time in both your inbox and in Salesforce.</p><p class=\"poet-read-more\"><a href=\"/blog/salesforce-tasks-calendar-email\" title=\"Read more of Salesforce Tasks and Calendaring, fully integrated with Mixmax\">Continue reading</a></p>","link":"https://mixmax.com/blog/salesforce-tasks-calendar-email","owner":"Mixmax"},{"title":"Test methods coupling","description":"\n<p>Sometimes when unit tests setup is complex we are tempted to take shortcuts and write single setup\nfor all tests which will save as few keystrokes. In the time of writing the test it might feel like\na good idea to configure complex unit test setup and reuse it in all test. This way we avoid code\nduplication and we create a more condensed test. This approach looks good only in the time of the\nwriting tests. Then there is a time when unit tests must be maintained. This is the time when you\nusually realize that saving few keystrokes wasn’t such a good idea.</p>\n<p><a href=\"https://blog.pchudzik.com/201610/test-methods-coupling/\">Read more</a></p>","link":"https://blog.pchudzik.com/201610/test-methods-coupling/","owner":"Paweł Chudzik"},{"title":"Weekly Programming Challenge #14","description":"Lindenmayer Systems\r\n — 4-minute read<img src=\"http://feeds.feedburner.com/~r/buckblog/~4/I8adtKb2Jxw\" height=\"1\" width=\"1\" alt=\"\"/>","link":"http://weblog.jamisbuck.org/2016/10/29/weekly-programming-challenge-14.html","owner":"Jamis Buck"}]