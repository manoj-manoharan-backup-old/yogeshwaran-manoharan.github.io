[{"title":"Keep your stuff up to date","description":"\n<p>Every codebase depends on multiple external libraries. It is a good idea to stay up to date with\nexternal dependencies. It is important to update all security related stuff and it might be helpful\nor fun to use latest features. I&rsquo;m going to share my way of staying up to date with external\ndependencies in maven, gradle and npm.</p>\n<p><a href=\"https://blog.pchudzik.com/201703/how-to-keep-dependencies-up-to-date/\">Read more</a></p>","link":"https://blog.pchudzik.com/201703/how-to-keep-dependencies-up-to-date/","owner":"Paweł Chudzik"},{"title":"When Switching Projects, Check your Assumptions or Risk Disaster","description":"On January 10, I released a badly broken version of the MongoDB C Driver, \r\nlibmongoc 1.5.2. For most users, that version could not connect to a server \r\nat all! Luckily, in under 24 hours a developer reported the bug, I reverted \r\nthe mistake and released a fix. Although it was resolved before it did any \r\ndamage, this is among the most dramatic mistakes I've made since I switched \r\nfrom the PyMongo team to libmongoc almost two years ago. My error stemmed \r\nfrom three mistaken assumptions I've had ever since I changed projects. \r\nWhat were they?\r\n\r\nInception\r\n\r\nHere's how the story began. In December, a libmongoc user named Alexey \r\npointed out a longstanding limitation: it would only resolve hostnames to \r\nIPv4 addresses. Even if IPv6 address records existed for a hostname, the \r\ndriver would not look them up -- when it called getaddrinfo on the hostname \r\nto do the DNS resolution, it passed AF_INET as the address family, \r\nprecluding anything but IPv4. So if you passed the URI\r\n mon","link":"https://engineering.mongodb.com/post/when-switching-projects-check-your-assumptions-or-risk-disaster","owner":"MongoDB"}]