[{"title":"","description":"<p><em>taps microphone</em> #garfield #dank</p>\n","link":"https://latacora.micro.blog/garfield-dank/","owner":"Latacora"},{"title":"","description":"<p>Is this thing on? #brand #skittles</p>\n","link":"https://latacora.micro.blog/is-this-thing/","owner":"Latacora"},{"title":"Create And Sign Bitcoin Transactions With Golang","description":"\n                    <p>About a month ago I had written about creating and importing private keys as well as generating public addresses for Bitcoin and several other cryptocurrencies using the Go programming language. This <a href=\"https://www.thepolyglotdeveloper.com/2018/02/generate-cryptocurrency-private-keys-public-addresses-golang/\">previous tutorial</a> had more of an emphasis on creating cryptocurrency wallets with Golang than anything.</p>\n<p>The next step in making Bitcoin and other cryptocurrencies useful is to be able to transfer or send them to other people. Sending Bitcoin is part of a process known as creating and broadcasting a transaction.</p>\n<p>While we won&rsquo;t be actually broadcasting a transaction in this tutorial, we&rsquo;re going to figure out how to create an unsigned transaction, then sign it, using the Go programming language and some popular Bitcoin packages.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www","link":"https://www.thepolyglotdeveloper.com/2018/03/create-sign-bitcoin-transactions-golang/","owner":"Nic Raboy"},{"title":"DevOps in Action - Hello Steel Team!","description":"<h2 id=\"get-off-my-lawn\">Get off my lawn</h2>\n<p>Let me start by saying I consider myself a <a href=\"https://xkcd.com/705/\">systems administrator</a>. Cloud infrastructure operations to be specific. Writing infrastructure as code, integrating services, and maintaining databases are the tools of my trade. So last year when it became increasingly obvious that the RightScale Ops team in its current structure would be no more and that instead I would be part of a smaller, fully integrated and more agile DevOps team, I felt a bit like the cantankerous Clint Eastwood character from Gran Torino and just wanted to yell, “Get off my lawn!”</p>\n\n<p>I have since come to see the reasoning and the effectiveness behind the restructuring to a DevOps model. The change came about due to the ever-increasing quantity and complexity of new microservices developed on ever-tighter deadlines. Despite our strong interface contracts honed over the years and built on a foundation of deploying in standardized wa","link":"http://eng.rightscale.com/2018/03/21/steel-helloworld.html","owner":"Rightscale"},{"title":"Revisiting Scala","description":null,"link":"https://glennengstrand.info/blog/?p=451","owner":"Glenn Engstrand"},{"title":"TCP Tracepoints","description":"TCP tracepoints have arrived in Linux! Linux 4.15 added five of them, and 4.16 (not quite released yet) added two more (tcp:tcp_probe, and sock:inet_sock_set_state &ndash; a socket tracepoint that can be used for TCP analysis). We now have:\n","link":"http://www.brendangregg.com/blog/2018-03-22/tcp-tracepoints.html","owner":"Brendan Gregg"},{"title":"The Tech Blog is Dead. Long Live the Tech Blog","description":"\n","link":"http://tech.gilt.com/culture/2018/03/21/the-tech-blog-is-dead-long-live-the-tech-blog","owner":"Gilt"}]