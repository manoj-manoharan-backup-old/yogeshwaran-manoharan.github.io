[{"title":"Language Mechanics On Memory Profiling","description":"Prelude This is the third post in a four part series that will provide an understanding of the mechanics and design behind pointers, stacks, heaps, escape analysis and value/pointer semantics in Go. This post focuses on heaps and escape analysis.\nIndex of the four part series:\n1) Language Mechanics On Stacks And Pointers\n2) Language Mechanics On Escape Analysis\n3) Language Mechanics On Memory Profiling\n4) Design Philosophy On Data And Semantics","link":"https://www.ardanlabs.com/blog/2017/06/language-mechanics-on-memory-profiling.html","owner":"Wilfred Hughes"},{"title":"The Curious Case of Systrace Reporting Jank on an EditText","description":"Recently, in a client project, I was debugging a RecyclerView to diagnose poor scrolling behavior when I stumbled on something quite curious. I was using the on screen GPU rendering tool when I noticed that frames were being rendered even when I was not actively scrolling the RecyclerView. That is, I was not interacting with [â€¦]","link":"/dev/2017/06/the-curious-case-of-systrace-reporting-jank-on-an-edittext/","owner":"Pusher"},{"title":"The Path from Beta to 1.0","description":"A version of this blog post was originally published on May 1, 2017 and has been modified to provide the newest information available.\nWith the recent 1.0 release, CockroachDB is now a production-ready database. 1.0 showcases the core capabilities of CockroachDB, while also offering users improved performance and stability with a cloud-native architecture that flexibly supports all manner of cloud deployments. It encompasses the core features that allow our users to run CockroachDB successfully in production.","link":"https://www.cockroachlabs.com/blog/coming-soon-what-to-expect-in-cockroachdb-1-0/","owner":"Cloudflare"}]