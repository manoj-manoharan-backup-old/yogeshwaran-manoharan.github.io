[{"title":"Histogram: You have to know the past to understand the present by Tomas Petricek","description":"<p ><a href=\"http://tomasp.net/histogram/\">Histogram: You have to know the past to understand the present</a> by Tomas Petricek, University of Kent</p>\n<p ><quote > Programs are created through a variety of interactions. A programmer might write some code, run it interactively to check whether it works, use copy and paste, apply a refactoring or choose an item from an auto-complete list. Programming research often forgets about these and represents programs as the resulting text. Consequently, thinking about such interactions is often out of scope. This essay shifts focus from programs to a more interesting question of programming.</quote> </p>\n<p ><quote > We represent programs as lists of interactions such as triggering an auto-complete and choosing an option, declaring a value, introducing a variable or evaluating a piece of code. We explore a number of consequences of this way of thinking about programs. First, if we create functions by writing concrete code using a sample input an","link":"http://lambda-the-ultimate.org/node/5582","owner":"Kyle Kingsbury"}]