[{"title":"Event Emitters Component Interactions in Angular Ionic","description":"<div class=\"bigInt\" itemprop=\"description\">This article is more about understanding the Event Emitters in Angular and Ionic. Data flow is the most important when you build an application to communicate with components. Event Emitters will help you to even bind using @Input @Output decorators. Here is a simple example to display and update the user profile using Angular Event Emitters.  For this demo I choose Ionic framework for better experience. Take a quick look at the live demo.  </div><br><div class=\"cen\"><img alt=\"Event Emitters Component Interactions in Angular Ionic\" class=\"sri650\" itemprop=\"image\" src=\"https://github.com/srinivastamada/9lessonsImages/blob/master/emitters/EmitEvent.png?raw=true\"></div><br><a href=\"http://www.9lessons.info/2020/03/event-emitters-component-interactions.html#more\"></a><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/9lesson?a=CQcN3UvaJjc:7z-vfta396s:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/9lesson?d=yIl2AUoC8zA\" borde","link":"http://feedproxy.google.com/~r/9lesson/~3/CQcN3UvaJjc/event-emitters-component-interactions.html","owner":"Simon Reimler"},{"title":"Gear Up for Remote Work","description":"","link":"https://medium.com/javascript-scene/gear-up-for-remote-work-d93cf61300f?source=rss----c0aeac5284ad---4","owner":"Eli Bendersky"},{"title":"Getting storage engines ready for fast storage devices","description":"Solid-state drives are an order of magnitude faster today than they were a \r\ndecade ago. Storage-class memories (SCM) sit on the memory bus and even \r\nfurther reduce I/O latency. Where hardware access used to be the \r\nbottleneck, software overheads may now dominate. System calls and \r\nfile-system housekeeping account for much of I/O latency. Researchers and \r\npractitioners investigated ways to navigate around these downsides without \r\ngiving up the convenience of using off-the-shelf operating systems and file \r\nsystems. At MongoDB, we converted the WiredTiger storage engine to use \r\nmemory-mapped files instead of system calls for I/O, and to batch the \r\noverhead of file-system housekeeping operations. These changes improved \r\nperformance by up to 63% on some I/O-intensive benchmarks.","link":"https://engineering.mongodb.com/post/getting-storage-engines-ready-for-fast-storage-devices","owner":"Mixpanel"},{"title":"npm is joining GitHub","description":null,"link":"https://dotdev.co/npm-is-joining-github/","owner":"Domenico Luciani"},{"title":"Periskop: Exception Monitoring Service","description":"Periskop is an exception monitoring service that we built here at SoundCloud. It was designed with microservice environments in mind, but itâ€¦","link":"https://developers.soundcloud.com/blog/periskop-exception-monitoring-service","owner":"Soshace"}]