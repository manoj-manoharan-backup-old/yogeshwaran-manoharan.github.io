[{"title":"\nGopher: a present for Redis\n","description":"Ten years ago Redis was announced on Hacker News, and I use this as virtual birthdate for the project, simply because it is more important when it was announced to the public than the actual date of the project first line of code (think at it conception VS actual birth in animals).  I’ll use the ten years of Redis as an excuse to release something I played a bit in the previous days, thinking to use it for the 1st April fool: but such date is far and I want to talk to you about this project now… So, happy birthday Redis! Here it’s your present: a Gopher protocol implementation.\n","link":"\nhttp://antirez.com/news/127\n","owner":"Andrey Akinshin"},{"title":"Developing A GraphQL API With Node.js And MongoDB","description":"\n                    <p>While REST APIs are amongst the most popular when it comes to client consumption, they are not the only way to consume data and they aren&rsquo;t always the best way. For example, having to deal with many endpoints or endpoints that return massive amounts of data that you don&rsquo;t need are common. This is where <a href=\"https://graphql.org/\">GraphQL</a> comes in.</p>\n<p>With GraphQL you can query your API in the same sense that you would query a database. You write a query, define the data you want returned, and you get what you requested. Nothing more, nothing less. I actually had the opportunity to interview the co-creator of GraphQL on my podcast in an episode titled, <a href=\"https://www.thepolyglotdeveloper.com/2018/08/tpdp-e20-graphql-api-development/\">GraphQL for API Development</a>, and in that episode we discuss GraphQL at a high level.</p>\n<p>You might remember that I wrote a tutorial titled, <a href=\"https://www.thepolyglotdeveloper.com/2018/05/get","link":"https://www.thepolyglotdeveloper.com/2019/02/developing-graphql-api-nodejs-mongodb/","owner":"Nelson Elhage"},{"title":"OpenID Connect 1: Microsoft Azure Active Directory","description":"The advantage of OpenID Connect is the fact that it’s standardized and widely adopted. This means that a library or tool designed to work with, e.g. Google accounts, can easily be adopted to work with e.g. Microsoft’s Active Directory or … ","link":"http://johannesbrodwall.com/2019/02/25/openid-connect-1-microsoft-azure-active-directory/","owner":"Joel Spolsky"},{"title":"Why we're switching to calendar versioning","description":"One small step for Cockroach Labs, one giant leap for our release numbering.\nSince our initial launch, Cockroach Labs has used semantic versioning in our release cycle guidelines. Two years, one major release, and n-patch fixes later, we&apos;re making the switch to Calendar Versioning. This means subscribers to our release notes will see quite the jump in today&apos;s version numbering, from last week&apos;s 2.1.5 to today&apos;s 19.1 beta.\nWhy the switch?","link":"https://www.cockroachlabs.com/blog/calendar-versioning/","owner":"Cloudflare"}]