[{"title":"Building the Inspect measurement engine","description":"Not too long ago I had the opportunity to construct a measurement system inside of Inspect that depicts and calculates the distances between two layers. In-between each layer, a line is drawn with a label that displays the distance. Supporting lines are added to the nearest edges of the hovered layer to help give the user an idea where the measurement lines reach.\nIn this article, I’ll explain some of my ideas and how I managed to take a fairly complex problem, break it down, and deliver something of value to an end user.","link":"https://engineering.invisionapp.com/post/building-the-inspect-measurement-engine/","owner":"Intuit"},{"title":"The PGP Problem","description":"\n\n<p><a href=\"https://blog.cryptographyengineering.com/2014/08/13/whats-matter-with-pgp/\">Cryptography engineers have been tearing their hair out over PGP’s deficiencies</a> for (literally) decades. When other kinds of engineers get wind of this, they’re shocked. PGP is bad? Why do people keep telling me to use PGP? The answer is that they shouldn’t be telling you that, because PGP is bad and needs to go away.</p>\n\n<p>There are, as you’re about to see, lots of problems with PGP. Fortunately, if you’re not morbidly curious, there’s a simple meta-problem with it: it was designed in the 1990s, before serious modern cryptography. No competent crypto engineer would design a system that looked like PGP today, nor tolerate most of its defects in any other design. Serious cryptographers have largely given up on PGP and don’t spend much time publishing on it anymore (<a href=\"https://www.usenix.org/system/files/conference/usenixsecurity18/sec18-poddebniak.pdf\">with a notable exception</a>). Wel","link":"https://latacora.micro.blog/2019/07/16/the-pgp-problem.html","owner":"Kolosek"}]