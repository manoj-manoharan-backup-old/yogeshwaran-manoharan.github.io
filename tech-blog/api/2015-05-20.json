[{"title":"Reducing WatchKit Traffic With View Models","description":"<p>If you own an Apple Watch, you probably noticed something disappointing: 3rd party apps are SLOW.</p>\n\n<p>If you&#39;ve written a watch app, you&#39;ll know that a big part of the problem lies in the bandwidth limitations of phone to watch communication. Architecting a performant WatchKit extension can be difficult due to the write-only nature of WatchKit UI elements and the stringly-typed nature of controllers.</p>\n\n<p>How can we decrease traffic sent from the phone to the watch while simultaneously reducing the complexity of your app&#39;s architecture? In this post I will describe how these can be achieved by using View Models.</p>\n\n<h2>Apple&#39;s Recommendations</h2>\n\n<p>Apple specifically <a href=\"https://developer.apple.com/watchkit/tips/\">recommends</a> that you should:</p>\n\n<ul>\n<li>Minimize traffic</li>\n<li>Update only what has changed</li>\n<li>Load content lazily</li>\n</ul>\n\n<p>This can be difficult with the WatchKit SDK since UI elements exist on the watch but are contro","link":"https://techblog.thescore.com/2015/05/20/reducing-watchkit-traffic-with-view-models/","owner":"Teespring"}]