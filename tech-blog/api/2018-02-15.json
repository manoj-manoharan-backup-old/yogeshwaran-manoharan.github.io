[{"title":"Dockerized e2e tests","description":"\nIn my free time, I&#8217;m trying to learn something new and best of way learning is by doing. To avoid spinning my wheels in vain I&#8217;m helping to develop some product. In the previous post, I&#8217;ve described what we&#8217;ve decided to use for the UI and pointed out that I&#8217;m going to write integration tests. Here is how I integrated selenium e2e tests with gitlab-ci/travis-ci/whatever by running them in docker.\n<p><a href=\"https://blog.pchudzik.com/201802/dockerized-e2e/\">Read more</a></p>","link":"https://blog.pchudzik.com/201802/dockerized-e2e/","owner":"Paul Lewis"},{"title":"Proofs (and Refutations) using Z3","description":"<p>People often think of formal methods and theorem provers as forbidding\ntools, cool in theory but with a steep learning curve that makes them\nhard to use in real life. In this post, weâ€™re going to describe a case\nwe ran into recently where we were able to leverage theorem proving\ntechnology, Z3 in particular, to validate some real world engineering\nwe were doing on the OCaml compiler. This post is aimed at readers\ninterested in compilers, but assumes no familiarity with actual\ncompiler development.</p>\n\n","link":"https://blog.janestreet.com/proofs-and-refutations-using-z3/","owner":"InVision"}]