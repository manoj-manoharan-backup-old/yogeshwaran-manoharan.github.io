[{"title":"Awaitility","description":"\n<div class=\"paragraph\">\n<p>If you are not working with multithreading programming and don’t have to test any asynchronous code\nthen this post will probably do you nothing good. But if you have ever struggled with testing some\nlogic running in multiple threads and you don’t know\n<a href=\"https://github.com/awaitility/awaitility\">Awaitility</a>. A small library helps testing asynchronous\ncode. If you&#8217;ve never heard of it then you should continue reading.</p>\n</div>\n<p><a href=\"https://blog.pchudzik.com/201910/awaitility/\">Read more</a></p>","link":"https://blog.pchudzik.com/201910/awaitility/","owner":"Paul Lewis"},{"title":"Get started geo-partitioning data with our command-line CockroachDB demo","description":"CockroachDB offers a number of powerful enterprise features, most notably those related to geo-partitioning tables. Geo-partitioning allows users to control where their data lives geographically, at the row-level. To make geo-partitioning easier for users to try out, we made some updates to cockroach demothat enable you to check out enterprise features without the need for a full deployment. Note that all of the features discussed in this blog will be available in CockroachDB version 19.","link":"https://www.cockroachlabs.com/blog/get-started-geo-partitioning-data-with-our-command-line-cockroachdb-demo/","owner":"Cloudflare"},{"title":"How to Create a REST API with Azure Functions and the Serverless Framework - Part 2","description":"Learn how to add API Management, Webpack and CI/CD to your Azure Functions REST API","link":"https://serverless.com/blog/serverless-azure-functions-v1-part2/","owner":"Sensible"},{"title":"Lerna","description":"By using Lerna, we get the advantages of a single repo, while still having the capabilities of deploying and publishing only the packages that have changed.","link":"/2019/10/10/lerna-monorepo/","owner":"MongoDB"},{"title":"Modules Part 01: Why And What","description":"Series Index Why and What\nProjects, Dependencies and Gopls\nMinimal Version Selection\nMirrors, Checksums and Athens\nGopls Improvements\nVendoring\nIntroduction Modules provide an integrated solution for three key problems that have been a pain point for developers since Go’s initial release:\nAbility to work with Go code outside of the GOPATH workspace. Ability to version a dependency and identify the most compatible version to use. Ability to manage dependencies natively using the Go tooling.","link":"https://www.ardanlabs.com/blog/2019/10/modules-01-why-and-what.html","owner":"Wilfred Hughes"}]