[{"title":"COM XSL Transformation: Bypassing Microsoft Application Control Solutions (CVE-2018-8492)","description":"Introduction Greetings, Everyone!  It has been several months since I’ve blogged, so it seems fitting to start the New Year off with a post about two topics that I thoroughly enjoy exploring: Application Control/Application Whitelisting (AWL) and the Component Object Model (COM).  As the title suggests, I stumbled upon a technique for bypassing Microsoft Application […]","link":"https://bohops.com/2019/01/10/com-xsl-transformation-bypassing-microsoft-application-control-solutions-cve-2018-8492/","owner":"Bohops"},{"title":"Multiple teams and monolith","description":"\n<div class=\"paragraph\">\n<p>At work I&#8217;m are engaged in the maintenance and development of a pretty big legacy monolithic\napplication. Some time ago team size basically doubled. To keep things simple and activate more\npeople we decided that we need to split the huge team into smaller more focused parties. Here is how\nwe are working on many features of the same code base in single monolith with multiple teams.</p>\n</div>\n<p><a href=\"https://blog.pchudzik.com/201901/multiple-teams-in-monolith/\">Read more</a></p>","link":"https://blog.pchudzik.com/201901/multiple-teams-in-monolith/","owner":"Paweł Chudzik"},{"title":"Pipelining Consensus Writes to Speed Up Distributed SQL Transactions","description":"CockroachDB supports ACID transactions across arbitrary data in a distributed database. A discussion on how this works was first published on our blog three years ago. Since then, a lot has changed. Perhaps most notably, CockroachDB has transitioned from a key-value store to a full SQL database that can be plugged in as a scalable, highly-available replacement for PostgreSQL. It did so by introducing a SQL execution engine which maps SQL tables onto its distributed key-value architecture.","link":"https://www.cockroachlabs.com/blog/transaction-pipelining/","owner":"CockroachDB"}]