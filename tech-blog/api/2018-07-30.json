[{"title":"Dynamic resources using the Network Information API and service workers","description":"The Network Information API allows developers to determine the connection types and the underlying connection technology that the user agent is using. In terms of web performance, this brings a whole new level to the way that we build web pages.","link":"https://34.220.116.254:80/dynamic-resources-using-the-network-information-api-and-service-workers/","owner":"David Walsh"},{"title":"Ruby 2.6 added options to Exception#full_message","description":"Ruby 2.6.0-preview2 was recently released.\nRuby 2.5.0 The Exception#full_message method returns a formatted string of the exception.\n&gt;&gt; e = StandardError.new(&#39;foo&#39;) =&gt; #&lt;StandardError: foo&gt; &gt;&gt; e.full_message =&gt; &#34;\\e[1mTraceback\\e[m (most recent call last):\\n(irb):14:in `full_message&#39;: \\e[1mfoo (\\e[1;4mStandardError\\e[m\\e[1m)\\e[m\\n&#34; The string contains escape sequences too.\nIt was proposed that escape sequences should be excluded from the error message.\nNobuyoshi Nakada said that since Exception#full_message is expected to return the message printed to stderr, escape sequences are intentional.","link":"https://crypt.codemancers.com/posts/2018-07-30-ruby-2-6-added-options-exception-full-message/","owner":"Codelitt"},{"title":"Serve Your Web Applications With Minimal Effort Using Caddy","description":"\n                    <p>I&rsquo;ve been in the web game for quite some time and have my fair share of web server software. I&rsquo;ve used Microsoft&rsquo;s Internet Information Services (IIS), Apache httpd, as well as NGINX, and while they all thrive in their own ways, they&rsquo;ve been overkill for most of my use cases. This is where <a href=\"https://caddyserver.com/\">Caddy</a> comes in, a lightweight alternative to these seasoned, but often heavy web servers.</p>\n<p>We&rsquo;re going to see how to use Caddy and learn why it is so powerful while using minimal effort on a developer operations side.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2018/07/serve-web-applications-minimal-effort-caddy/'>Serve Your Web Applications With Minimal Effort Using Caddy</a> appeared first on <a rel='nofollow' href='https://www.thepolyglotdeveloper.com'>The Polyglot Developer</a>.</p>\n                    \n                ","link":"https://www.thepolyglotdeveloper.com/2018/07/serve-web-applications-minimal-effort-caddy/","owner":"Nelson Elhage"}]