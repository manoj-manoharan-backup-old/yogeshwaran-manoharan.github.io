[{"title":"Test ETag Browser Caching with cURL Requests","description":"\n                    <p>Recently I&rsquo;ve been playing around with <a href=\"https://www.netlify.com\">Netlify</a> and as a result I&rsquo;m becoming more familiar with caching strategies commonly found with content delivery networks (CDN). One such strategy makes use of ETag identifiers for web resources.</p>\n<p>In short, an ETag identifier is a value, typically a hash, that represents the version of a particular web resource. The resource is cached within the browser along with the ETag value and that value is used when determining if the particular cached resource has changed remotely.</p>\n<p>We&rsquo;re going to explore how to simulate the requests that the browser makes when working with ETag identifiers, but using simple cURL requests instead.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2019/09/test-etag-browser-caching-curl-requests/'>Test ETag Browser Caching with cURL Requests</a> appeared first on <","link":"https://www.thepolyglotdeveloper.com/2019/09/test-etag-browser-caching-curl-requests/","owner":"Nelson Elhage"},{"title":"Using DISTINCT ON in Non-PostgreSQL Databases","description":"A nice little gem in PostgreSQL’s SQL syntax is the DISTINCT ON clause, which is as powerful as it is esoteric. In a previous post, we’ve blogged about some caveats to think of when DISTINCT and ORDER BY are used together. The bigger picture can be seen in our article about the logical order of … ","link":"https://blog.jooq.org/2019/09/09/using-distinct-on-in-non-postgresql-databases/","owner":"IPFS"},{"title":"Waltz: A Distributed Write-Ahead Log","description":"<p>We are happy to announce the open source release of Waltz. Waltz is a distributed write-ahead log.\nIt was initially designed to be the ledger of money transactions on the WePay system and was generalized for broader use cases of distributed systems that require <a href=\"https://en.wikipedia.org/wiki/Serializability\">serializable consistency</a>.\nWaltz is similar to existing log systems like Kafka in that it accepts/persists/propagates transaction data produced/consumed by many services. However, unlike other systems, Waltz provides a machinery that facilitates a serializable consistency in distributed applications. It detects conflicting transactions before they are committed to the log. Waltz is regarded as the single source of truth rather than the database, and it enables a highly reliable log-centric system architecture.</p>\n\n<h2 id=\"background\">Background</h2>\n\n<h3 id=\"databases\">Databases</h3>\n\n<p>The WePay system has been constantly growing to handle more traffic and more fun","link":"https://wecode.wepay.com/posts/waltz-a-distributed-write-ahead-log","owner":"Wemake.services"}]