[{"title":"SICP in Clojure - Chapter 4","description":"<h1 id=\"sicp-in-clojure---chapter-4\">SICP in Clojure - Chapter 4</h1>\n\n<quote class=\"disclaimer\">In one of the <a href=\"http://www.afronski.pl/books-that-changed-my-career/2015/06/01/books-that-changed-my-career-structure-and-interpretation-of-computer-programs.html\">previous blog posts</a> I have announced that I would like to start a new series of posts. It is a persistent journal from my journey through aforementioned book. I hope that you will enjoy it and find it useful - the main goal is to make this series a place where we can return in future, recall ideas and thoughts that accompanied reading process.</quote>\n\n<h3 id=\"introduction\">Introduction</h3>\n\n<p>By finishing the <a href=\"http://www.afronski.pl/sicp-in-clojure/2015/09/18/sicp-in-clojure-chapter-3.html\">previous chapter</a> we learned more about <em>functional programming</em>, <em>designing</em> and <em>dealing</em> with stateful computation and a little bit about <em>laziness</em>. It was pretty much a <em>general purp","link":"http://www.afronski.pl/sicp-in-clojure/2015/10/05/sicp-in-clojure-chapter-4.html","owner":"William Kennedy"}]