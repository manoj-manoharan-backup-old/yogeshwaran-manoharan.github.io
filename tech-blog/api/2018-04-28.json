[{"title":"Bounds Check Elimination In Go","description":"Introduction One day I was talking to Damian Gryski in Slack about some performance improvements he made to his go-metro package. When I first looked at the changes I was completely confused how this could have any effect on the performance of the code. I felt the code was more readable, but more performant? I didnâ€™t see it.\nThen Damian started to talk to me about a compiler optimization called Bounds Check Elimination or BCE.","link":"https://www.ardanlabs.com/blog/2018/04/bounds-check-elimination-in-go.html","owner":"Wilfred Hughes"},{"title":"Friday Q&A 2018-04-27: Generating Text With Markov Chains in Swift\n","description":"Markov chains make for a simple way to generate realistic looking but nonsensical text. Today, I'm going to use that technique to build a text generator based on this blog's contents, an idea suggested/inspired by reader Jordan Pittman.<br><a href=\"http://www.mikeash.com/pyblog/friday-qa-2018-04-27-generating-text-with-markov-chains-in-swift.html\">(Read More)</a>","link":"http://www.mikeash.com/pyblog/friday-qa-2018-04-27-generating-text-with-markov-chains-in-swift.html","owner":"Miguel Quinones"}]