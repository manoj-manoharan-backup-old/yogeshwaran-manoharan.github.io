[{"title":"Jbuilder to AMS - A tested journey","description":"<p><a href=\"https://blog.codeship.com/building-a-json-api-with-rails-5/\">Rails 5</a> is coming and ships with the <code>--api</code> option. This will generate a fresh but slimmed down Rails app whose job is to serve as a JSON API. With this option you&#39;ll get <a href=\"https://github.com/rails-api/active_model_serializers\">Active Model Serializers - AMS</a> installed by default. This is a great library that is only getting better with all of the work that the AMS is doing on it.</p>\n\n<p>Not everyone is creating a new Rails app though... most of us have existing ones, which may use RABL, Jbuilder, or a number of other options to generate JSON responses.</p>\n\n<h2>Knock knock, who&#39;s there? Legacy code.</h2>\n\n<p>Let&#39;s say we have a JSON API written in <a href=\"https://github.com/rails/jbuilder\">Jbuilder</a> (or RABL) and we want to switch it over to using AMS... what&#39;s the first step? And what about after that? In this article I&#39;ll be walking us through converting our ap","link":"https://techblog.thescore.com/2015/11/27/jbuilder-to-ams-a-tested-journey/","owner":"theScore"},{"title":"NativeScript vs Ionic Framework, Should You Switch?","description":"\n                    <p>It is no question that I am pretty familiar with Ionic Framework and Apache Cordova in general. I have a ton of blog articles, YouTube videos and even a <a href=\"https://www.thepolyglotdeveloper.com/2015/10/ionic-framework-101-a-quickstart-to-building-mobile-apps/\">beginner level course</a> for Ionic Framework. However, lately I’ve been playing around with NativeScript by Telerik, a similar technology platform that has many advantages over the competitors. I also have blog articles and a <a href=\"https://www.thepolyglotdeveloper.com/2015/11/nativescript-101-a-quickstart-to-building-mobile-apps/\">beginner level course</a> for NativeScript.</p>\n<p>I’m going to do an in-depth comparison between the two hybrid development platforms so you can figure out which is best for you.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2015/11/nativescript-vs-ionic-framework-should-you-switch/'>NativeScrip","link":"https://www.thepolyglotdeveloper.com/2015/11/nativescript-vs-ionic-framework-should-you-switch/","owner":"Nic Raboy"},{"title":"Rails generate model: be specific","description":"Rails can generate a lot of things for you. Personally I use generate model often to quickly setup a new model, including test files and a database migration. In its simplest form it looks like this:\nrails generate product This will get you started with a naked Product model. To make things easier, you can also supply attribute names:\nrails generate product name description:text Optionally, you can tell the generator what type of attribute you want.","link":"https://www.devroom.io/2015/11/27/rails-generate-model-be-specific/","owner":"Ariejan de Vroom"}]