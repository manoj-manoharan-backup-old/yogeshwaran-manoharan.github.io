[{"title":"5 Lessons From Build Stuff 2017","description":"At Small Improvements we each have a learning budget and get to choose which conferences ... ","link":"https://tech.small-improvements.com/5-lessons-from-build-stuff-2017/","owner":"Slack"},{"title":"Introducing the Habitat Kubernetes Exporter","description":"At Kinvolk , we&rsquo;ve been working with the Habitat team at Chef to make Habitat-packaged applications run well in Kubernetes.\nThe first step on this journey was the Habitat operator for Kubernetes which my colleague, Lili, already wrote about . The second part of this project —the focus of this post— is to make it easier to deploy Habitat apps to a Kubernetes cluster that is running the Habitat operator.","link":"/blog/2017/12/introducing-the-habitat-kubernetes-exporter/","owner":"King"},{"title":"Kubernetes The Hab Way","description":"How does a Kubernetes setup the Hab(itat) way look? In this blog post we will explore how to use Habitat’s application automation to set up and run a Kubernetes cluster from scratch, based on the well-known “ Kubernetes The Hard Way ” manual by Kelsey Hightower .\nA detailed README with step-by-step instructions and a Vagrant environment can be found in the Kubernetes The Hab Way repository.\nKubernetes Core Components To recap, let’s have a brief look on the building blocks of a Kubernetes cluster and their purpose:","link":"/blog/2017/12/kubernetes-the-hab-way/","owner":"King"},{"title":"Recruiting Engineers Using Online Challenges","description":"<p><em>This blog post is part of the <a href=\"/blog/mixmax-eng-advent-2017\">Mixmax 2017 Advent Calendar</a>. The previous post on December 4th was <a href=\"/blog/terraforming-all-the-things\">Terraforming All The Things</a>.</em></p>\n<p class=\"poet-read-more\"><a href=\"/blog/recruiting-engineers-with-online-challenges\" title=\"Read more of Recruiting Engineers Using Online Challenges\">Continue reading</a></p>","link":"https://mixmax.com/blog/recruiting-engineers-with-online-challenges","owner":"Microsoft Python Engineering"},{"title":"Using “Follow-the-Workload” to Beat the Latency-Survivability Tradeoff in CockroachDB","description":"Geographically distributed databases like CockroachDB offer a number of benefits including reliability, security, cost-effective deployments, and more. Critics often counter that distributed databases increase latency. What if a database could offer all of the benefits of distribution, but also provide low-latency? With this challenge in mind, we set out to minimize latency in CockroachDB, all the while providing exceptional reliability for mission-critical workloads. We built &#x201C;follow-the-workload&#x201D; to be a key feature to improve performance and provide additional control to database administrators (DBAs).","link":"https://www.cockroachlabs.com/blog/follow-the-workload/","owner":"Cloudflare"}]