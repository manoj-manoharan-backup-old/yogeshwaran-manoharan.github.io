[{"title":"Don't write command-line interfaces (generate them)","description":"<p style=\"color: #666677\">\n(a friendly reminder that reading post before commenting is a great idea. \nSome people see this as an argument for GUI &mdash; but it's completely misleading)\n</p>\n\n<p>A favourite activity of fresh github-bers is writing CLI (command-line interfaces) for anything.</p>\n\n<p>Every programmer uses CLI <strong>(true)</strong>, so writing CLI makes you more professional <strong>(false)</strong>.</p>\n\n<p>CLIs are required in everyday maintenance, env/pipeline/db management, and checking this and that.\nIt is a glue to keep different subsystems together, but hardly CLI is a reliable programming interface.\nProgress in software engineering left bash calls far behind in terms of reliability and flexibility.</p>\n\n<h2 id=\"whats-wrong-with-writing-cli-as-an-interface\">What’s wrong with writing CLI as an ‘interface’?</h2>\n\n<ul>\n  <li>CLI support is an additional logic in your program that makes <strong>no real work</strong></li>\n  <li>While typically being dumb, CLI logic is","link":"https://arogozhnikov.github.io/2020/10/01/dont-write-cli.html","owner":"Alan Storm"},{"title":"How I Broke `git push heroku main`","description":"<p>Incidents are inevitable. Any platform, large or small will have them. While resiliency work will definitely be an important factor in reducing the number of incidents, hoping to remove all of them (and therefore reach 100% uptime) is not an achievable goal.</p>\n\n<p>We should, however, learn as much as we can from incidents, so we can avoid repeating them.</p>\n\n<p>In this post, we will look at one of those incidents, <a href=\"https://status.heroku.com/incidents/2105\">#2105</a>, see how it happened (spoiler: I messed up), and what we’re doing to avoid it from happening again (spoiler: I’m not fired).</p>\n\n<!-- more -->\n<h2 class=\"anchored\">\n  <a name=\"git-push-inception\" href=\"#git-push-inception\">Git push inception</a>\n</h2>\n\n<p>Our Git server is a component written in Go which can listen for HTTP and SSH connections to process a Git command.\nWhile we try to run all our components as Heroku apps on our platform just like Heroku customers, this component is different, as it has sever","link":"https://blog.heroku.com/how-i-broke-git-push-heroku-main","owner":"HERE"},{"title":"How to Host a Group Code Review","description":"","link":"https://buildingvts.com/how-to-host-a-group-code-review-61345dbc7b98?source=rss----f76c28ec6a84---4","owner":"VNGRS"},{"title":"The New Training Log","description":"","link":"https://medium.com/strava-engineering/the-new-training-log-59bcbf8a3747?source=rss----89d4108ce2a3---4","owner":"Stormpath"}]