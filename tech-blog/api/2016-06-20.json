[{"title":"APFS in Detail: Conclusions","description":"This series of posts covers APFS, Apple’s new filesystem announced at WWDC 2016. See the first post for the table of contents. Summing Up I’m not sure Apple absolutely had to replace HFS+, but likely they had passed an inflection point where continuing to maintain and evolve the 30+ year old software was more expensive than building [...]","link":"http://dtrace.org/blogs/ahl/2016/06/19/apfs-part6/","owner":"Adam Bard"},{"title":"APFS in Detail: Data Integrity","description":"This series of posts covers APFS, Apple’s new filesystem announced at WWDC 2016. See the first post for the table of contents. Data Integrity Arguably the most important job of a file system is preserving data integrity. Here’s my data, don’t lose it, don’t change it. If file systems could be trusted absolutely then the “only” reason [...]","link":"http://dtrace.org/blogs/ahl/2016/06/19/apfs-part5/","owner":"Adam Bard"},{"title":"APFS in Detail: Encryption, Snapshots, and Backup","description":"This series of posts covers APFS, Apple’s new filesystem announced at WWDC 2016. See the first post for the table of contents. Encryption Encryption is clearly a core feature of APFS. This comes from diverse requirements from the various devices, for example multiple keys within file systems on the iPhone or per-user keys on laptops. I heard [...]","link":"http://dtrace.org/blogs/ahl/2016/06/19/apfs-part2/","owner":"Adam Bard"},{"title":"APFS in Detail: Overview","description":"Apple announced a new file system that will make its way into all of its OS variants (macOS, tvOS, iOS, watchOS) in the coming years. Media coverage to this point has been mostly breathless elongations of Apple’s developer documentation. With a dearth of detail I decided to attend the presentation and Q&A with the APFS [...]","link":"http://dtrace.org/blogs/ahl/2016/06/19/apfs-part1/","owner":"Adam Bard"},{"title":"APFS in Detail: Performance","description":"This series of posts covers APFS, Apple’s new filesystem announced at WWDC 2016. See the first post for the table of contents. Performance APFS claims to be optimized for flash. Flash memory (NAND) is the stuff in your speedy SSD. Apple changed the computing industry when it put flash into the iPod and iPhone, volumes for which [...]","link":"http://dtrace.org/blogs/ahl/2016/06/19/apfs-part4/","owner":"Adam Bard"},{"title":"APFS in Detail: Space Efficiency and Clones","description":"This series of posts covers APFS, Apple’s new filesystem announced at WWDC 2016. See the first post for the table of contents. Space Efficiency A modern trend in file systems has been to store data more efficiently to effectively increase the size of your device. Common approaches include compression (which, as noted above, is very very likely [...]","link":"http://dtrace.org/blogs/ahl/2016/06/19/apfs-part3/","owner":"Adam Bard"},{"title":"Humidifier - CloudFormation made easier","description":"kg-card-begin: markdown","link":"https://eng.localytics.com/humidifier-cloudformation-made-easier/","owner":"LiveRamp"},{"title":"Swift 3 and Xcode 8","description":" Swift 3 beta was just released as part of Xcode 8 beta and includes numerous enhancements, many contributed by the open source community. The primary goal of Swift 3 is to implement the last major source changes necessary to allow Swift to coalesce as a consistent language throughout, resulting in a much more stable syntax for future releases.  Swift syntax and API renaming changes in Swift 3 make the language feel more natural, and provide an even more Swift-y experience when calling Cocoa frameworks. Popular frameworks Core Graphics and Grand Central Dispatch have new, much cleaner interfaces in Swift. This release also improves build performance, and includes many small fixes that will make it more enjoyable to use every day.   Xcode 8 beta  includes a migrator for Swift files and playgrounds to help you move your existing code to Swift 3.  Swift 2.3  In addition to Swift 3, Xcode 8 supports development with Swift 2.3, a minor update to the Swift 2.2 language built to work with the","link":"https://developer.apple.com/swift/blog/?id=36","owner":"Sketch"},{"title":"Trepl: Generic Tiered Replication","description":"You’re doing data replication wrong. There. I said it. Suppose you’ve got a six node database cluster (ex. HDFS, Cassandra, Riak), and you’d like to store three copies of some piece of data in the cluster. Which three nodes should you pick? One possibility is that you pick a random three nodes. This is the […]","link":"http://engineering.chartbeat.com/2016/06/20/trepl-generic-tiered-replication/","owner":"Chaps"}]