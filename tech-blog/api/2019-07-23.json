[{"title":"Announcing ESCAPE/19: The Multi-Cloud Conference","description":"Over the past few years, cloud conferences have taken center stage in the tech world. And as the three largest public cloud providers have grown, we&#x2019;ve seen each launch a proprietary conference. Re:Invent, Next and Ignite have emerged as the main forums for practitioners tp share best practices and vendors announce major product advancements.&#xA0;\nBut since these shows are run by specific cloud providers, the content is typically presented in the context of that single large cloud provider.","link":"https://www.cockroachlabs.com/blog/announcing-escape-19-the-multi-cloud-conference/","owner":"Cloudflare"},{"title":"Continuous Integration of Vanilla C Programs for Intel, ARM, and MIPS Architecture","description":"<p>Developing cross-platform applications presents a major challenge:, how to ensure that every commit does not break some combinations of operating systems and CPU architectures. Fortunately, thanks an array of online services and open-source tools, this challenge becomes easier to tackle.</p>\n\n<p>For this demo, I have the traditional <em>Hello, world</em> program written in ANSI C/C90 at this repository: <a href=\"https://github.com/ariya/hello-c90\">github.com/ariya/hello-c90</a> (feel free to take a look). The objective is to verify its automatic build (for the purpose of continuous integration) for a number of different CPU architectures, operating systems, as well as the C/C++ compilers. Supported CPU architectures are (using <a href=\"https://wiki.debian.org/SupportedArchitectures\">Debian nomenclatures</a>) are amd64, i386, i686, armhf, arm64, and mips. Among some C/C++ compilers to be tested are <a href=\"https://gcc.gnu.org/\">GCC</a>, <a href=\"https://clang.llvm.org/\">Clang</a>, <","link":"https://ariya.io/2019/07/continuous-integration-of-vanilla-c-programs-for-intel-arm-and-mips-architecture","owner":"Ariejan de Vroom"},{"title":"Sharing code between web & React Native: Why & how to configure Metro for code sharing","description":"","link":"https://build.affinity.co/sharing-code-between-web-react-native-why-how-to-configure-metro-for-code-sharing-d6ec73427e08?source=rss----c4f165841679---4","owner":"Addepar"}]