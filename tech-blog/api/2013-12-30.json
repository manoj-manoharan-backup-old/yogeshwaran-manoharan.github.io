[{"title":"Git Powered Deploys Using Capistrano","description":"<p class=\"p1\">At <a href=\"http://wattpad.com\" title=\"Wattpad\">wattpad.com</a>, we use Capistrano to deploy our code. Capistrano is a great tool for deploying to a number of machines and having the code go live, more or less, at the same time. But there was a problem, as our code base grew and the number of machines we deploy to also grew our deploy times went from seconds to minutes. We wanted the ability to code and release as fast as possible, and if something went wrong we should be able to push out a fix or rollback even faster. There was another issue, php5-fpm really didn’t like its directory being changed out, and restarting fpm after a deploy was causing some failed requests. </p>\n<p class=\"p2\">The first order was to change how Capistrano deploys. By default when you deploy with Capistrano it puts a copy of the code into “releases/&lt;timestamp&gt;” then changes the symlink of “current” to point to the latest timestamped directory in releases. To solve the issue of php5-fpm’s i","link":"https://engineering.wattpad.com/post/71640634286","owner":"Wattpad"},{"title":"Lightweight Linux Kernel Development with KVM","description":"I don&rsquo;t do a ton of Linux kernel development these days, but I&rsquo;ve done a fair bit in the past, and picked up a number of useful techniques for doing kernel development in a relatively painless fashion. This blog post is a writeup of the tools and techniques I use when developing for the Linux kernel. Nothing I write here is &ldquo;the one way&rdquo; to do it, but this is a workflow I&rsquo;ve found to work for me, that I hope others may find useful.","link":"https://blog.nelhage.com/2013/12/lightweight-linux-kernel-development-with-kvm/","owner":"Nelson Elhage"}]