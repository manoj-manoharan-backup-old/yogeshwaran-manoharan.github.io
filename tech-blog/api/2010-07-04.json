[{"title":"Implementing a declarative mini-language in the C preprocessor","description":"Last time, I announced Check Plus, a declarative language for defining Check tests in C. This time, I want to talk about the tricks I used to implement a declarative minilanguage using the C preprocessor (and some GCC extensions).\nThe Problem We want to write some toplevel declarations that look like:\n#define SUITE_NAME example BEGIN_SUITE(&quot;Example test suite&quot;); #define TEST_CASE core BEGIN_TEST_CASE(&quot;Core tests&quot;); â€¦  and so on, and somehow translate them into code that does the equivalent of:","link":"https://blog.nelhage.com/2010/07/implementing-an-edsl-in-cpp/","owner":"Natasha Murashev"}]