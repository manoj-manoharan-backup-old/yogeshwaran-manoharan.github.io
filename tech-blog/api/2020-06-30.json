[{"title":"\nThe end of the Redis adventure\n","description":"When I started the Redis project more than ten years ago I was in one of the most exciting moments of my career. My co-founder and I had successfully launched two of the major web 2.0 services of the Italian web. In order to make them scalable we had to invent many new concepts, that were already known in the field most of the times, but we didn’t know, nor we cared to check. Problem? Let’s figure out a solution. We wanted to solve problems but we wanted, even more, to have fun. This was the playful environment where Redis was born.\n","link":"\nhttp://antirez.com/news/133\n","owner":"Andrey Akinshin"},{"title":"Announcing backtrace-unity 3.0.0","description":null,"link":"https://backtrace.io/blog/announcements/announcing-backtrace-unity-3-0-0/","owner":"Babbel"},{"title":"Changing the Interview Process during Remote Working","description":"Please also see Part 1: Rethinking the Backend Engineering Interview Take-Home Challenge and Part 2: The Recruiting Perspective and Results…","link":"https://developers.soundcloud.com/blog/changing-interview-process-during-remote-working","owner":"Soshace"},{"title":"Disk Spilling in a Vectorized Execution Engine","description":"Late last year, we shipped v1 of our vectorized execution engine. It enables column-based query execution and speeds up complex joins and aggregations, improving analytical capabilities in CockroachDB (which is first and foremost optimized for OLTP workloads). v1 of the engine didn&#x2019;t support disk spilling, which meant it couldn&#x2019;t execute certain memory-intensive queriesif there was not enough memory available. Starting in CockroachDB v20.1, these queries fall back to disk (also known as &#x201C;spilling&#x201D; to disk).","link":"https://www.cockroachlabs.com/blog/disk-spilling-vectorized/","owner":"Cloudflare"},{"title":"Fiber: Distributed Computing for AI Made  Simple","description":null,"link":"https://eng.uber.com/fiberdistributed/","owner":"Twitch"},{"title":"How do cars fare in crash tests they're not specifically optimized for?","description":"\n\n<p>Any time you have a benchmark that gets taken seriously, some people will start gaming the benchmark. Some famous examples in computing are the CPU benchmark <a href=\"https://spec.org/benchmarks.html\">specfp</a> and video game benchmarks. With specfp, Sun managed to increase its score on <a href=\"https://www.spec.org/osg/cpu2000/CFP2000/179.art/docs/179.art.html\">179.art</a> (a sub-benchmark of specfp) by 12x with a compiler tweak that essentially re-wrote the benchmark kernel, which increased the Sun <a href=\"https://en.wikipedia.org/wiki/UltraSPARC_III\">UltraSPARC</a>’s overall specfp score by 20%. At times, GPU vendors have added specialized benchmark-detecting code to their drivers that lowers image quality during benchmarking to produce higher benchmark scores. Of course, gaming the benchmark isn't unique to computing and we see people do this <a href=\"./discontinuities/\">in other fields</a>. It’s not surprising that we see this kind of behavior since improving benchmark scor","link":"https://danluu.com/car-safety/","owner":"Daily Tech Video"},{"title":"Searching for Nearby Points of Interest with MongoDB and Mapbox","description":"\n                    <p>When it comes to location data, MongoDB&rsquo;s ability to work with GeoJSON through geospatial queries is often under-appreciated. Being able to query for intersecting or nearby coordinates while maintaining performance is functionality a lot of organizations are looking for.</p>\n<p>Take the example of maintaining a list of business locations or even a fleet of vehicles. Knowing where these locations are, relative to a particular position isn&rsquo;t an easy task when doing it manually.</p>\n<p>In this tutorial we&rsquo;re going to explore the <code>$near</code> operator within a MongoDB Realm application to find stored points of interest within a particular proximity to a position. These points of interest will be rendered on a map using the Mapbox service.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2020/06/searching-nearby-points-interest-mongodb-mapbox/'>Searching for Nearby Points","link":"https://www.thepolyglotdeveloper.com/2020/06/searching-nearby-points-interest-mongodb-mapbox/","owner":"Nelson Elhage"},{"title":"Understanding Template Literals in JavaScript","description":"This article was originally written for DigitalOcean. Introduction The 2015 edition of the ECMAScript specification (ES6) added template…","link":"https://www.taniarascia.com/understanding-template-literals/","owner":"Swizec Teller"}]