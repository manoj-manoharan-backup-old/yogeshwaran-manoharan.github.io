[{"title":"Working with JSON in Swift","description":" If your app communicates with a web application, information returned from the server is often formatted as  JSON . You can use the Foundation framework’s  JSONSerialization  class to convert JSON into Swift data types like  Dictionary ,  Array ,  String ,  Number , and  Bool . However, because you can’t be sure of the structure or values of JSON your app receives, it can be challenging to deserialize model objects correctly. This post describes a few approaches you can take when working with JSON in your apps.  Extracting Values from JSON  The  JSONSerialization  class method  jsonObject(with:options:)  returns a value of type  Any  and throws an error if the data couldn’t be parsed.  [view code in blog]  Although valid JSON  may contain only a single value , a response from a web application typically encodes an object or array as the top-level object. You can use optional binding and the  as?  type cast operator in an  if  or  guard  statement to extract a value of known type as a ","link":"https://developer.apple.com/swift/blog/?id=37","owner":"Swift"}]