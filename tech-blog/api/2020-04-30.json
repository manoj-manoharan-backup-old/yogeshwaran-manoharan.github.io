[{"title":"\nRedis 6.0.0 GA is out!\n","description":"Finally Redis 6.0.0 stable is out. This time it was a relatively short cycle between the release of the first release candidate and the final release of a stable version. It took about four months, that is not a small amount of time, but is not a lot compared to our past records :)\n","link":"\nhttp://antirez.com/news/132\n","owner":"Andrey Akinshin"},{"title":"Gain confidence in your investment with Product Discovery","description":"So, you have an idea for an app and you want to see if it's an idea worth pursuing? Before spending too much time and money, you want to be confident that your product will be a success in the world. You want to be sure that your service will deliver real value to consumers and subsequently, drive the success of your business.","link":"https://blog.novoda.com/gain-confidence-in-your-investment-with-product-discovery/","owner":"Nordic APIs"},{"title":"Long live Toner!","description":"\n          <img src=\"https://www.maptiler.com/media/2020-04-30-long-live-toner-1.png\"\n          alt=\"Thumb\">\n          <p>It’s been almost a decade since the Toner map style was created by Stamen Design, the famous San Francisco based design studio. Still used today by cartographers from around the world, we were inspired and made it ready for vector tiles.</p>\n\n<h2 id=\"black--white-high-contrast-mapstyle\">Black &amp; white high-contrast map style</h2>\n<p><a href=\"https://api.maptiler.com/maps/toner/?key=FgUcizTE7gigsuRcIdW4#10.4/37.7977/-122.4188\">Toner</a> is all about simplicity and contrast. It uses black and white only and artfully inks the minimum amount of features onto the map. We kept most of the original design characteristics but leveraged additional modern mapping techniques to update the style and make it function across all zoom levels.</p>\n\n<p><img src=\"https://www.maptiler.com/media/2020-04-30-long-live-toner-2.png\" alt=\"Preview of the toner style seamless patterns\" /><","link":"https://www.maptiler.com/news/2020/04/long-live-toner/","owner":"Mandrill"},{"title":"Practical Testing of Firebase Projects","description":"<p>Your little Firebase project is getting bigger every day? Never underestimate the need to establish a solid and firm integration tests from the get go.</p>\n\n<p>Once you start to utilize various features of Firebase, from <a href=\"https://firebase.google.com/docs/hosting\">Hosting</a>, <a href=\"https://firebase.google.com/docs/functions\">Functions</a>, and <a href=\"https://firebase.google.com/docs/firestore/\">Firestore</a>, it is imperative to incorporate practical local testing as soon as possible. Not only it will save you from some potential nightmares down the road, it can also facilitate faster iterations and quick(er) turn-around time during refactoring and feature implementation. Here is a few random suggestions to get you started. To follow along, you can also check the git repository containing the sample code at <a href=\"https://github.com/ariya/hello-firebase-experiment\">github.com/ariya/hello-firebase-experiment</a>.</p>\n\n<p><img src=\"https://ariya.io/images/2020/04/hellof","link":"https://ariya.io/2020/04/practical-testing-of-firebase-projects","owner":"Ariejan de Vroom"}]