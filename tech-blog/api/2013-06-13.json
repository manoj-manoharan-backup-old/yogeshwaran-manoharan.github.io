[{"title":"Building a Good UI Framework with XHP","description":"<p>This is the article I wanted to write ever since I started this blog. XHP is a really powerful tool, but like any tool you need to know how to use it for it to be really effective. Facebook has built a very powerful UI framework on top of XHP, but we had to change the way we think about object patterns to do it. I&rsquo;ll get into that in a bit, but first I&rsquo;m going to jump right into the most important feature of Facebook&rsquo;s UI library: attribute forwarding.</p>\n<p><!-- more --></p>\n<p>Here&rsquo;s the problem, when you make your own XHP component, the element you return in your render method is <em>exactly</em> what will be sent down the wire. That means if you want to apply IDs, classes, onclicks, or any other attributes to an individual instance, you&rsquo;ll have to account for that in your class and set it on the returned node. Here&rsquo;s what I mean by that.</p>\n<blockquote>\n<div>\n<p><code>class :ui:div extends :x:element {<br/>  attribute :div;<br/>  protected f","link":"https://codebeforethehorse.tumblr.com/post/52824249342","owner":"Stefan Parker"},{"title":"Send an email in Go with smtp.SendMail","description":"I wanted to send an email from my TraceLog package when a critical exception occurred. Fortunately Go&rsquo;s standard library has a package called smpt which can be found inside the net package. When you look at the documentation you are left wanting.\nI spent 20 minutes researching how to use this package. After fighting through the parameters and bugs, I came up with this sample code:\npackage main\nimport (","link":"https://www.ardanlabs.com/blog/2013/06/send-email-in-go-with-smtpsendmail.html","owner":"William Kennedy"}]