[{"title":"Intercepting class method invocations using metaclass programming in Python","description":"In Ruby, objects have a handy method called method_missing which allows one to handle method calls for methods that have not been defined. Most examples out there explain how to implement this in Python using __getattr__, however, none of them (honestly, none) explain how to intercept class method (@classmethod) invocations using __metaclass__. And that’s why… ","link":"https://blog.fedecarg.com/2015/01/08/intercepting-class-method-invocations-using-metaclass-programming-in-python/","owner":"Federico Cargnelutti"}]