[{"title":"Create A Full Stack App Using Java & Couchbase Server","description":"\n                    <p>Full stack development is all the rage right now. Knowing how all the bits and pieces of an application works is a necessity in modern development. Previously I demonstrated how easy it was to <a href=\"https://www.thepolyglotdeveloper.com/2015/10/create-a-full-stack-app-using-node-js-couchbase-server/\">create a full stack application using the Couchbase, Express, AngularJS, and Node.js (CEAN) stack</a>, but this time we’re going to be swapping out Node.js for Java.</p>\n<p>We’re going to look at creating a full stack application where Java and <a href=\"https://www.couchbase.com/\">Couchbase Server</a> acts as our back-end and AngularJS, HTML, and CSS acts as our front-end.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2016/01/create-a-full-stack-app-using-java-and-couchbase-server/'>Create A Full Stack App Using Java & Couchbase Server</a> appeared first on <a rel='nofollow' href='https://","link":"https://www.thepolyglotdeveloper.com/2016/01/create-a-full-stack-app-using-java-and-couchbase-server/","owner":"Nic Raboy"},{"title":"Making arbitrarily-large binaries from fixed-size C++ code","description":"<p>C++ programmers know that careless use of templates can bloat your\nbinaries.  This got me to thinking, could you write a C++ program that\ncan make an arbitrarily large binary, just by tweaking some constant\nin the code?</p>\n\n<p>Now of course you could just declare a really large array initialized\nto some non-zero constant.  But that’s too easy.  I wanted to see if I\ncan generate an arbitrary amount of <em>code</em> (not data).</p>\n\n<p>My first attempt was simple and straightforward:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-cpp\" data-lang=\"cpp\"><span class=\"c1\">// Copyright 2015 Google Inc.</span>\n<span class=\"c1\">//</span>\n<span class=\"c1\">// Licensed under the Apache License, Version 2.0 (the \"License\");</span>\n<span class=\"c1\">// you may not use this file except in compliance with the License.</span>\n<span class=\"c1\">// You may obtain a copy of the License at</span>\n<span class=\"c1\">//</span>\n<span class=\"c1\">// http://www.apache.org/licenses/LICENSE-2.0</span>\n<s","link":"https://blog.reverberate.org/2016/01/making-arbitrarily-large-binaries-from.html","owner":"Josh Haberman"}]