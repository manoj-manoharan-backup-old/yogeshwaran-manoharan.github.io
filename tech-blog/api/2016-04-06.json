[{"title":"Graph(QL)ing Vogue","description":"Why we decided to go with the bleeding edge GraphQL project to power the next phases of Vogue.com's web and app data needs.","link":"https://technology.condenast.com/story/graphqling-vogue","owner":"Commercetools"},{"title":"Use SQLite To Save Data In A Telerik NativeScript App","description":"\n                    <p>Not too long ago I wrote a tutorial regarding <a href=\"https://www.thepolyglotdeveloper.com/2015/11/saving-data-in-your-nativescript-mobile-application/\">saving data in a NativeScript mobile application</a> using the application settings module that closely resembled that of HTML5 local storage. If you’re not familiar with the application settings module, it is persisted storage using key value pairs. What if you wanted a storage option that was a bit more query friendly?  Like other hybrid app platforms, NativeScript supports SQLite for persisted data as well.</p>\n<p>Both iOS and Android supports SQLite and since Telerik NativeScript can interface directly with native APIs, it becomes possible to use SQLite. We don’t need to write all the interface logic by hand because there happens to be a nice plugin available to make our life easier.</p>\n<p>We’re going to see how to make use of SQLite in an Android and iOS <a href=\"https://www.nativescript.org/\">NativeScrip","link":"https://www.thepolyglotdeveloper.com/2016/04/use-sqlite-save-data-telerik-nativescript-app/","owner":"Nelson Elhage"}]