[{"title":"4 simple principles to win the Onboarding game","description":"","link":"https://crowdfire.engineering/4-simple-principles-to-win-the-onboarding-game-41acf04afb2f?source=rss----212c5945ed6c---4","owner":"Criteo"},{"title":"Determine Network Availability In An Ionic Mobile App","description":"\n                    <p>Continuing to freshen up my popular Ionic Framework tutorials in preparation for the release of Ionic 2, I figured it was time to revisit how to determine network availability in an application. Previously I showed how to <a href=\"https://www.thepolyglotdeveloper.com/2014/06/check-network-connection-with-ionicframework/\">check for a network connection using Ionic Framework 1</a>, but this time it makes sense to do the same using Ionic 2.</p>\n<p>We’ll use the same <a href=\"https://github.com/apache/cordova-plugin-network-information\">Apache Cordova Network Information plugin</a> from the previous tutorial, but this time we’ll evaluate how to use it with Angular.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2016/01/determine-network-availability-in-an-ionic-2-mobile-app/'>Determine Network Availability In An Ionic Mobile App</a> appeared first on <a rel='nofollow' href='https://www.thepol","link":"https://www.thepolyglotdeveloper.com/2016/01/determine-network-availability-in-an-ionic-2-mobile-app/","owner":"Nelson Elhage"},{"title":"How We Built The Fastest Extension for Chrome","description":"","link":"https://crowdfire.engineering/how-we-built-the-fastest-extension-for-chrome-65d695972dee?source=rss----212c5945ed6c---4","owner":"Criteo"},{"title":"Power up your Sublime Text as Ruby/Rails IDE","description":"","link":"https://crowdfire.engineering/power-up-your-sublime-text-as-ruby-rails-ide-f0a7fa8b1fcb?source=rss----212c5945ed6c---4","owner":"Criteo"},{"title":"Visualizing Parallel Requests in Elixir","description":"We have been evaluating Elixir at Codemancers and today I was learning how to spin up a minimal HTTP API endpoint using Elixir. Like Rack in Ruby land, Elixir comes with Plug, a swiss army knife for dealing with HTTP connections.\nUsing Plug to build an HTTP endpoint First, let&rsquo;s create a new Elixir project:\n$ mix new http_api --sup This creates a new Elixir OTP app. Let&rsquo;s add :cowboy and :plug as hex and application dependencies:","link":"https://crypt.codemancers.com/posts/2016-01-15-visualizing-parallel-requests-in-elixir/","owner":"Codelitt"}]