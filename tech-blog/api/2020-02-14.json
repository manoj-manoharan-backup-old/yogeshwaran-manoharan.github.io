[{"title":"Exploring Microsoft Teams Rooms (MTR) Console as a Potential Attack Vector","description":"Introduction Microsoft Teams Rooms (MTR), formerly known as Skype Room System and Lync Room Systems, is the latest and greatest solution from Microsoft for managing online collaborative meetings. In many businesses across the globe, a Teams Rooms console (“Teams console”) is the lifeblood of the conference room. The console typically consists of a supported computer […]","link":"https://bohops.com/2020/02/14/exploring-microsoft-teams-rooms-mtr-console-as-a-potential-attack-vector/","owner":"Blundell's Android Tutorials"},{"title":"How this blog is build","description":"\n<div class=\"paragraph\">\n<p>In this post, I’d like to show you how I’ve started with writing this blog.\nHow the process evolved during 3 years of writing.\nHow I’ve finally managed to set up everything in a way that works for me now.\nIf you don’t blog yet this might help you out with technical details on how you can start easily.\nIf you already have a blog maybe you’ll be able to pick up some ideas.</p>\n</div>\n<p><a href=\"https://blog.pchudzik.com/202002/blog-process/\">Read more</a></p>","link":"https://blog.pchudzik.com/202002/blog-process/","owner":"Paul Lewis"},{"title":"Interview with Marc Morera: About DriftPHP","description":"Recently I interviewed Marc Morera. He is an author of DriftPHP - a new asynchronous non-blocking framework on top of Symfony Components and ReactPHP. We discussed a new framework and how it became possible to make Symfony asynchronous and run it on top of ReactPHP. - Hi everybody and today we’re gonna have an interview with Marc Morera. He is an author of a new framework for asynchronous PHP and he also organizes the first conference about asynchronous PHP which is gonna happen on 26th 27th March in Barcelona. Hi Marc. How are doing? Hello. Nice to be here with you today. Thank you. - What is driftPHP? Why do we need just one more framework in PHP ecosystem? You...","link":"http://sergeyzhuk.me/2020/02/14/marc-morera-driftphp/","owner":"Sam Saffron"},{"title":"jOOQ 3.13 Released with More API and Tooling for DDL Management","description":"jOOQ 3.13 has been released with CockroachDB support, much more API and tooling for DDL management, and SQL:2011 temporal table support Starting with this release, we will further embrace our support for parsing, translating, executing, and now also interpreting DDL statements. The driving force is better code generation support, but in the future, also better … ","link":"https://blog.jooq.org/2020/02/14/jooq-3-13-released-with-more-api-and-tooling-for-ddl-management/","owner":"IPFS"},{"title":"My Linux and Vim Notes","description":null,"link":"https://catonmat.net/linux-and-vim-notes","owner":"Peter Steinberger"},{"title":"Scale, Crop, and Zoom Images in a React Web Application","description":"\n                    <p>If you&rsquo;ve been keeping up with the blog, you might remember a few tutorials I wrote around the <a href=\"https://fengyuanchen.github.io/cropperjs/\">Cropper.js</a> library for JavaScript applications. In these tutorials I demonstrated how to manipulate images in <a href=\"https://www.thepolyglotdeveloper.com/2019/06/image-cropping-zooming-scaling-angular-javascript/\">Angular</a> as well as <a href=\"https://blog.logrocket.com/cropping-images-in-the-browser-with-vue-js/\">Vue.js</a> web applications. While the tutorials were more or less the same, the framework was different, which resulted in some differences in the code used.</p>\n<p>So what if we were building a <a href=\"https://reactjs.org/\">React</a> application and needed to manipulate images prior to uploading them to a server?</p>\n<p>In this tutorial we&rsquo;re going to see how to use Cropper.js to crop images within a React web application. While we won&rsquo;t be uploading these images to a remote serv","link":"https://www.thepolyglotdeveloper.com/2020/02/scale-crop-zoom-images-react-web-application/","owner":"Nelson Elhage"},{"title":"Turnstile+: Dependent Type Systems as Macros","description":"<p >In 2017, a team from Northeastern University released Turnstile, a framework for implementing propositionally typed languages in Racket; cf. naasking's story <a href=\"http://lambda-the-ultimate.org/node/5426\">Type Systems as Macros</a>. The system was really nice because it allowed type systems to be expressed in a manner similar to the way theoretical PL researchers would in a paper, and because it hooked into Racket's clean compiler backend.</p>\n<p >Now Stephen Chang, one of that team, together with new coauthors Michael Ballantyne, Usamilo Turner and William Bowman, have released a rewrite that they call Turnstile+, together with a POPL article, <a href=\"https://www.ccs.neu.edu/home/stchang/pubs/cbtb-popl2020.pdf\">Dependent Type Systems as Macros</a>. From that article's introduction:</p>\n<blockquote ><p >\nTurnstile+ represents a major research leap over its predecessor. Specifically, we solve the major challenges necessary to implement dependent types and their accompanying DSL","link":"http://lambda-the-ultimate.org/node/5587","owner":"Kyle Kingsbury"}]