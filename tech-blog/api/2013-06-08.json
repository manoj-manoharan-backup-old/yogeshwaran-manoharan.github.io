[{"title":"Introducing Invoker - Manage processes in development envionment","description":"If you are working on a large application with several dependencies such as - more than one application server, background job, it can get tedious to start and stop and check their logs in bunch of different places.\nInvoker is a small utility we wrote to manage all such processes from one place. Invoker owes much to Foreman for inspiration, however unlike Foreman it has been exclusively written to be used in development environment.","link":"https://crypt.codemancers.com/posts/2013-06-10-introducing-invoker/","owner":"Codelitt"},{"title":"Understanding Defer, Panic and Recover","description":"I am building my TraceLog package and it is really important that the package logs any internal exceptions and prevents panics from shutting down the application. The TraceLog package must never be responsible for shutting down an application. I also have internal go routines that must never terminate until the application is shut down gracefully.\nUnderstanding how to use Defer and Recover in your application can be a bit tricky at first, especially if you are used to using try/catch blocks.","link":"https://www.ardanlabs.com/blog/2013/06/understanding-defer-panic-and-recover.html","owner":"Wilfred Hughes"}]