[{"title":"Observations of a functional programmer","description":"<p>I was recently invited to do the keynote at the <a href=\"http://cufp.org/2016/\">Commercial Users of Functional\nProgramming</a> workshop, a 15-year-old gathering which is\nattached to ICFP, the primary academic functional programming conference.</p>\n\n","link":"https://blog.janestreet.com/observations-of-a-functional-programmer/","owner":"InVision"},{"title":"Use A Pre-Populated SQLite Database With NativeScript And Angular","description":"\n                    <p>I recently wrote about <a href=\"https://www.thepolyglotdeveloper.com/2016/10/using-sqlite-in-a-nativescript-angular-2-mobile-app/\">how to use a SQLite database</a> within a NativeScript Android and iOS application that was built with Angular. This was more or less a revisit to the <a href=\"https://www.thepolyglotdeveloper.com/2016/04/use-sqlite-save-data-telerik-nativescript-app/\">vanilla NativeScript tutorial</a> on the same subject I had written earlier in the year. What happens when you have a massive amount of data that youâ€™d like to save your user from needing to download before using your application?  Can a SQLite database be pre-populated and included within an application?</p>\n<p>To keep the flow going, I figured it would be a good idea to demonstrate how to ship a <a href=\"https://www.nativescript.org/\">NativeScript</a> Angular application with a pre-filled SQLite database rather than populating it on-the-fly.</p>\n                    \n                 ","link":"https://www.thepolyglotdeveloper.com/2016/10/use-pre-populated-sqlite-database-nativescript-angular-2/","owner":"Nelson Elhage"}]