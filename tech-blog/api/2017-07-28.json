[{"title":"Friday Q&A 2017-07-28: A Binary Coder for Swift\n","description":"In <a href=\"friday-qa-2017-07-14-swiftcodable.html\">my last article</a> I discussed the basics of Swift's new <code>Codable</code> protocol, briefly discussed how to implement your own encoder and decoder, and promised another article about a custom binary coder I've been working on. Today, I'm going to present that binary coder.<br><a href=\"http://www.mikeash.com/pyblog/friday-qa-2017-07-28-a-binary-coder-for-swift.html\">(Read More)</a>","link":"http://www.mikeash.com/pyblog/friday-qa-2017-07-28-a-binary-coder-for-swift.html","owner":"Miguel Quinones"},{"title":"Inside a SoundCloud Microservice","description":"If you’re a regular visitor to this blog, you might be aware that we have been transitioning to a microservices based architecture over the past four to five years, as we have shared insights into the process and the related challenges on multiple occasions. To recap, adopting a microservices architecture has allowed us to regain team autonomy by breaking up our monolithic backend into dozens of decoupled services, each encapsulating a well defined portion of our product domain. Every service is built and deployed individually, communicating with other services over the network via light-weight data interchange formats such as JSON or Thrift.\nWhat we haven’t touched on so far is how a microservice at SoundCloud looks backstage.","link":"https://developers.soundcloud.com/blog/inside-a-soundcloud-microservice","owner":"Soshace"}]