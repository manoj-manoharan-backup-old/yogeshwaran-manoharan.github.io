[{"title":"Accelerating Machine Learning with the Feature Store Service","description":"Machine Learning features are extremely valuable for a business. Often times they are the result of intensive computation or costly API calls. Our Feature Store Service enables the storage, retrieval, curation, and discovery of features which reduces duplicate work and accelerates Machine Learning use-cases.","link":"https://technology.condenast.com/story/accelerating-machine-learning-with-the-feature-store-service","owner":"Commercetools"},{"title":"Angular Dynamic Routes for User Profiles","description":"<div class=\"bigInt\" itemprop=\"description\">Are you working with social applications and user profiles?  This post is about implementing dynamic routes for Angular application with basic route validations. This article is a part of Angular routing series for better understanding, please check my previous articles. Here you find importing the dynamic route value and validating with a regular expression for protecting the application routes. </div><br><div class=\"cen\"><img alt=\"Angular Dynamic Routes for user profiles \" class=\"sri650\" itemprop=\"image\" src=\"https://github.com/srinivastamada/9lessonsImages/blob/master/route-guard/Angular-Dynamic-Routes-3.png?raw=true\"></div><br><a href=\"http://www.9lessons.info/2019/03/angular-dynamic-routes-for-user-profiles.html#more\"></a><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/9lesson?a=VEJZKjVAf3Y:stM98yhaxFU:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/9lesson?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feed","link":"http://feedproxy.google.com/~r/9lesson/~3/VEJZKjVAf3Y/angular-dynamic-routes-for-user-profiles.html","owner":"Simon Reimler"},{"title":"Angular Routing with Lazy Loading Design Pattern ","description":"<div class=\"bigInt\" itemprop=\"description\">Lazy loading is a design pattern to implement large scale Angular projects. Using this system design we can load the components based on the application need. This way we can increase the application performance. This article is a continues of Angular routing project, please follow <a href=\"https://www.9lessons.info/2018/09/angular-lazyload-routing-route-guards.html\" target=\"blank\">the previous parts</a> for better understanding. This will explain how to covert default component-based structure to Angular lazy loading pattern. </div><br><div class=\"cen\"><img alt=\"Angular Routing with Lazy Loading Design Pattern  \" class=\"sri650\" itemprop=\"image\" src=\"https://github.com/srinivastamada/9lessonsImages/blob/master/route-guard/angular-lazy-loading.png?raw=true\"></div><br><a href=\"http://www.9lessons.info/2019/05/angular-routing-with-lazy-loading.html#more\"></a><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/9lesson?a=q4-Ocucdmd0:7","link":"http://feedproxy.google.com/~r/9lesson/~3/q4-Ocucdmd0/angular-routing-with-lazy-loading.html","owner":"Simon Reimler"},{"title":"Driving Kubernetes Forward with Lokomotive","description":"Over the past few years, Kinvolk has been fortunate to work with some of the leading names in the industry on some of the most interesting projects in the cloud-native space. This work has without exception relied on our team’s deep knowledge of Linux, containers, Kubernetes and how these all work together. Our team’s rare ability to affect every layer of the Kubernetes stack has provided technology-spanning benefits and the driving motivations for our next steps.","link":"/blog/2019/05/driving-kubernetes-forward-with-lokomotive/","owner":"King"},{"title":"Testing Go services using interfaces","description":"<h2 class=\"no_toc\" id=\"table-of-contents\">Table of Contents</h2>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#defining-the-goal-posts\" id=\"markdown-toc-defining-the-goal-posts\">Defining the goal posts</a></li>\n  <li><a href=\"#planning-for-testability\" id=\"markdown-toc-planning-for-testability\">Planning for testability</a></li>\n  <li><a href=\"#defining-the-data-model\" id=\"markdown-toc-defining-the-data-model\">Defining the data model</a></li>\n  <li><a href=\"#the-repository-layer\" id=\"markdown-toc-the-repository-layer\">The repository layer</a>    <ol>\n      <li><a href=\"#the-interface\" id=\"markdown-toc-the-interface\">The interface</a></li>\n      <li><a href=\"#the-default-implementation\" id=\"markdown-toc-the-default-implementation\">The default implementation</a></li>\n      <li><a href=\"#testing-the-default-implementation\" id=\"markdown-toc-testing-the-default-implementation\">Testing the default implementation</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#external-api-clients\" id=\"markdown-toc-exter","link":"https://deliveroo.engineering/2019/05/17/testing-go-services-using-interfaces.html","owner":"DeferPanic"}]