[{"title":"Achieving Major Stability and Performance Improvements in Yahoo Mail with a Novel Redux Architecture","description":"<p><a href=\"https://yahoodevelopers.tumblr.com/post/173059437072/achieving-major-stability-and-performance\" class=\"tumblr_blog\">yahoodevelopers</a>:</p><blockquote>\n<p>By Mohit Goenka, Gnanavel Shanmugam, and Lance Welsh</p>\n<p>At Yahoo Mail, we’re constantly striving to upgrade our product experience. We do this not only by adding <a href=\"https://yahoomail.tumblr.com/post/173062841545/the-best-of-the-new-yahoo-mail-made-better-by-you\">new features based on our members’ </a><a href=\"https://yahoomail.tumblr.com/post/173062841545/the-best-of-the-new-yahoo-mail-made-better-by-you\">feedback</a>, but also by providing the best technical solutions to power the most engaging experiences. As such, we’ve recently introduced a number of novel and unique revisions to the way in which we use Redux that have resulted in significant stability and performance improvements. Developers may find our methods useful in achieving similar results in their apps.<br/></p>\n<p><b>Improvements to product metri","link":"https://yahooeng.tumblr.com/post/173062946866","owner":"Yahoo"},{"title":"CockroachDB is 10x more scalable than Amazon Aurora for OLTP workloads","description":"[For CockroachDB&apos;s most up-to-date performance benchmarks, please read our Performance Overview page]\nThe three design principles of CockroachDB are correctness, stability, and performance. Having achieved our correctness and stability goals with CockroachDB 1.0 and 1.1, we focused heavily on performance with CockroachDB 2.0. For more information on which benchmarks matter, or to see a comparison between CockroachDB 1.1 and 2.0, you can read CockroachDB 2.0 Makes Significant Strides.\nToday we are releasing a comprehensive whitepaper that demonstrates how CockroachDB achieves high OLTP performance of over 128,000 tpmC on a TPC-C dataset over 2 terabytes in size.","link":"https://www.cockroachlabs.com/blog/performance-part-two/","owner":"CockroachDB"},{"title":"Dependencies BOM","description":"\n<div class=\"paragraph\">\n<p>Managing and versioning a bunch of connected libraries or services is hard. It doesn’t matter if\nyou are a consumer or a provider of it. In this post, I&#8217;m exploring two simple solutions which\nmight come in handy if you develop an ecosystem of libraries/services or when you are a consumer\nof those. It is all about semantic versioning and import scope of BOM in maven dependencies.</p>\n</div>\n<p><a href=\"https://blog.pchudzik.com/201804/dependencies-bom/\">Read more</a></p>","link":"https://blog.pchudzik.com/201804/dependencies-bom/","owner":"Paweł Chudzik"}]