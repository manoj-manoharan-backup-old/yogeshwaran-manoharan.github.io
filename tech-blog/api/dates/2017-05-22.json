[{"title":"Cryptography in Colors","description":"A math-light explanation of one of the core technologies of the internet: public key cryptography. We’ll use visual aides and metaphors from Brit Cruise’s Art of the Problem video series on YouTube to explore this topic in-depth. As software developers we rely on some truly amazing computer science concepts to do our day-to-day work, and oftentimes we […]","link":"/dev/2017/05/cryptography-in-colors/","owner":"Raizlabs"},{"title":"HTTPS on Stack Overflow: The End of a Long Road","description":"<p>Today, we deployed HTTPS by default on <a href=\"https://stackoverflow.com/\">Stack Overflow</a>. \nAll traffic is now redirected to <code class=\"language-plaintext highlighter-rouge\">https://</code> and Google links will change over the next few weeks. \nThe activation of this is quite literally flipping a switch (feature flag), but getting to that point has taken years of work.\nAs of now, HTTPS is the default on all Q&amp;A websites.</p>\n\n<p>We’ve been rolling it out across the Stack Exchange network <a href=\"https://meta.stackoverflow.com/q/345012/13249\">for the past 2 months</a>. \nStack Overflow is the last site, and by far the largest. \nThis is a huge milestone for us, but by no means the end. \nThere’s still more work to do, which <a href=\"#next-steps\">we’ll get to</a>.\nBut the end is finally in sight, hooray!</p>\n\n<p>Fair warning: This is the story of a long journey. Very long. \nAs indicated by your scroll bar being very tiny right now. \nWhile Stack Exchange/Overflow is not unique","link":"https://nickcraver.com/blog/2017/05/22/https-on-stack-overflow/","owner":"Nick Craver"},{"title":"Using Network Sockets With The Go Programming Language","description":"\n                    <p>A few months back I wrote about using <a href=\"https://www.thepolyglotdeveloper.com/2016/12/create-real-time-chat-app-golang-angular-2-websockets/\">websockets in a Golang application</a> for communication with an Angular client web application. While very useful and simplistic, in many cases websockets won’t be the means for real-time communication between applications. It is often easier or better to use standard TCP network sockets as an alternative. For example, if you’re developing an online video game, it will likely communicate to the server using TCP sockets rather than websockets.</p>\n<p>We’re going to see how to create a basic chat application using the Go programming language. This chat application will have a server for listening and routing client communications and a client for sending and receiving messages from the server.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2017","link":"https://www.thepolyglotdeveloper.com/2017/05/network-sockets-with-the-go-programming-language/","owner":"Nic Raboy"}]