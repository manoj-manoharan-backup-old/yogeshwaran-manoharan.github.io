[{"title":"Introducing GoldenGate","description":"<p>You might not know it, but both Flipboard for iOS and Flipboard for Android make heavy use of web views. We use web views so we can ensure consistent designs for our partners’ articles across all platforms. Communication between native code and the JavaScript code running in a web view is something that is both tedious to implement as well as very bug prone as it’s mostly just string concatenation. Today we are releasing a library to make this task easier when developing Android applications which use web views.<!--break--></p>\n\n<p><a href=\"http://www.github.com/flipboard/goldengate\" title=\"GoldenGate source on GitHub\">GoldenGate</a> is a annotation processing library which generates java wrappers around your JavaScript code. An annotation processing library is a piece of code which runs when you compile your code and has the ability to generate new java classes. This means that GoldenGate can ensure at compile time that you are sending the correct types into the JavaScript function","link":"http://engineering.flipboard.com//2015/02/golden-gate","owner":"Flipboard"},{"title":"Real Life Mocking","description":"<p>In a <a href=\"http://engineroom.trackmaven.com/blog/making-a-mockery-of-python/\">previous post</a> we discussed a basic use case for Python's fantastic <code>mock</code> library, showing how mock objects are useful for isolating components of an application and creating clean unit tests. By testing against the fake interface provided by a mock object, we can check how our functions are called, provide idealised outputs, and make sure that our unit tests are testing what we think they're testing.</p>\n<p>That said, it's unlikely that in real life, the height of complexity of our unit tests will be checking if two numbers multiply correctly. This post will cover some ways that we use <code>mock</code> in our test suite at TrackMaven, examining a common case where <code>mock</code> really shines by replacing a slow, complex, or variable component - the HTTP request.</p>\n<h2>What are we testing?</h2>\n<p>Building a web application that gathers data from an external source invariably invol","link":"http://engineroom.trackmaven.com/blog/real-life-mocking/","owner":"TrackMaven"}]