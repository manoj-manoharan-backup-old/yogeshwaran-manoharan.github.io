[{"title":"Encrypt And Decrypt Data In Node.js With The Crypto Library","description":"\n                    <p>As you&rsquo;ve probably noticed from the previous few articles, I&rsquo;ve been doing a lot of development around cryptocurrency wallets using Node.js. Up until now, I&rsquo;ve only been writing about interacting with different currencies. However, I haven&rsquo;t discussed how to safely store your wallet information.</p>\n<p>When it comes to storing anything sensitive, whether it be cryptocurrency secrets or something else, you must do so safely and securely. For example, the data must be encrypted at rest and decrypted when used.</p>\n<p>We&rsquo;re going to see how to encrypt data with a passphrase using Node.js and decrypt it using that same passphrase when necessary.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2018/01/encrypt-decrypt-data-nodejs-crypto-library/'>Encrypt And Decrypt Data In Node.js With The Crypto Library</a> appeared first on <a rel='nofollow' href='https://www.the","link":"https://www.thepolyglotdeveloper.com/2018/01/encrypt-decrypt-data-nodejs-crypto-library/","owner":"Nic Raboy"},{"title":"Escape-Analysis Flaws","description":"Prelude It will be helpful to read this four-part series first on escape analysis and data semantics. Details on how to read an escape analysis report and pprof output have been outlined here.\nhttps://www.ardanlabs.com/blog/2017/05/language-mechanics-on-stacks-and-pointers.html\nIntroduction Even after working with Go for 4 years, I am continually amazed by the language. Thanks to the static code analysis the compiler performs, the compiler can apply interesting optimizations to the code it produces.","link":"https://www.ardanlabs.com/blog/2018/01/escape-analysis-flaws.html","owner":"William Kennedy"}]