[{"title":"10 Website Redesign Tips for 2018","description":"If you are thinking about improving your business site there are some things you should know beforehand. We present you best website redesign tips for 2018.","link":"https://kolosek.com/website-redesign-tips-2018/","owner":"Kolosek"},{"title":"Evaluating the Evaluation: A Benchmarking Checklist","description":"A co-worker introduced me to Craig Hanson and Pat Crain's performance mantras, which neatly summarize much of what we do in performance analysis and tuning. They are:\n","link":"http://www.brendangregg.com/blog/2018-06-30/benchmarking-checklist.html","owner":"Brendan Gregg"},{"title":"Friday Q&A 2018-06-29: Debugging with C-Reduce\n","description":"Debugging a complex problem is tough, and it can be especially difficult when it's not obvious which chunk of code is responsible. It's common to attempt to produce a reduced test case in order to narrow it down. It's tedious to do this manually, but it's also the sort of thing computers are really good at. C-Reduce is a program which automatically takes programs and pares them down to produce a reduced test case. Let's take a look at how to use it.<br><a href=\"http://www.mikeash.com/pyblog/friday-qa-2018-06-29-debugging-with-c-reduce.html\">(Read More)</a>","link":"http://www.mikeash.com/pyblog/friday-qa-2018-06-29-debugging-with-c-reduce.html","owner":"Mike Ash"},{"title":"Kotlin on the server at Khan Academy","description":"","link":"http://engineering.khanacademy.org/posts/kotlin-adoption.htm","owner":"Khan Academy"},{"title":"Migrating PostgreSQL to Aurora with near Zero-Downtime","description":"<p><img src=\"/assets/elephant-migration.jpg\" alt=\"\">\n<a href=\"https://flickr.com/photos/jeaneeem/22658750486\" title=\"15_CBP_JMP-39\">15<em>CBP</em>JMP-39</a> by <a href=\"https://flickr.com/people/jeaneeem\">jeaneeem</a> is licensed under <a href=\"https://creativecommons.org/licenses/by-nc-nd/2.0/\">CC BY-NC-ND</a></p>\n\n<h1>Migrating PostgreSQL to Aurora with near Zero-Downtime</h1>\n\n<p>The goal here is to migrate an Amazon Web Services (AWS) Relational Database Service (RDS) PostgreSQL Database to Aurora with as little downtime as possible. The following documents the initial strategy that was considered using read replica promotion, followed by the end result using AWS&#39;s Database Migration Service (DMS).</p>\n\n<h1>Why Aurora</h1>\n\n<p>From the <a href=\"https://aws.amazon.com/rds/aurora/details/\">Aurora Details Page</a>:</p>\n\n<blockquote>\n<p>Amazon Aurora is designed to offer greater than 99.99% availability, increasing MySQL and PostgreSQL performance and availability by tightly integr","link":"https://techblog.thescore.com/2018/06/29/migrating-postgresql-to-aurora-with-near-zero-downtime/","owner":"theScore"},{"title":"Plans for OCaml 4.08","description":"<p>With the external release of OCaml 4.07.0 imminent, we in Jane Street’s\nTools &amp; Compilers group have been planning what we want to work on for\ninclusion in OCaml 4.08. These days OCaml uses (or at least attempts) a\ntime-based release process with releases scheduled every 6 months. We’re\ntrying to avoid rushing in changes at the last minute – as we’ve been\nprone to do in the past – so this list is restricted to things we could\nconceivably finish in the next 4-5 months.</p>\n\n","link":"https://blog.janestreet.com/plans-for-ocaml-408/","owner":"Jane Street"}]