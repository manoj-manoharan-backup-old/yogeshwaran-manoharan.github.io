[{"title":"Testing Linearizability with Jepsen and Evergreen: “Call Me Continuously!”","description":"What do you do with a third-party tool that proves your application lacks a \r\nfeature? Add that tool to your continuous integration system (after adding \r\nthe feature, of course)! In our case we have added linearizable reads to \r\nMongoDB 3.4 and use Jepsen to test it.\r\n\r\nWhat is Linearizability?\r\n\r\nLinearizability is a property of distributed systems first introduced by \r\nHerlihy & Wing in their July 1990 article \"Linearizability: a correctness \r\ncondition for concurrent objects\" (ACM Transactions on Programming \r\nLanguages and Systems Journal). Peter Bailis probably provides the most \r\naccessible explanation of linearizability: \"writes should appear to be \r\ninstantaneous. Imprecisely, once a write completes, all later reads (where \r\n“later” is defined by wall-clock start time) should return the value of \r\nthat write or the value of a later write. Once a read returns a particular \r\nvalue, all later reads should return that value or the value of a later \r\nwrite.\"","link":"https://engineering.mongodb.com/post/testing-linearizability-with-jepsen-and-evergreen-call-me-continuously","owner":"MongoDB"},{"title":"Use The Native Device Clipboard In A NativeScript Angular Application","description":"\n                    <p>Back when I had just started to learn NativeScript I had created a tutorial for <a href=\"https://www.thepolyglotdeveloper.com/2016/03/access-the-native-device-clipboard-in-telerik-nativescript/\">using the native device clipboard for copying and pasting</a>. The previous tutorial demonstrated this functionality in a vanilla JavaScript application. In an effort to clean up any loose ends, I figured it would be a good idea to convert this tutorial into an Angular equivalent. While nothing has really changed in the clipboard functionality, Angular is a very different animal.</p>\n<p>We’re going to see how to copy and paste directly within an application built with Angular, TypeScript, and <a href=\"https://www.nativescript.org/\">NativeScript</a>.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2017/02/device-clipboard-nativescript-angular-application/'>Use The Native Device Clipboard In A Native","link":"https://www.thepolyglotdeveloper.com/2017/02/device-clipboard-nativescript-angular-application/","owner":"Nic Raboy"}]