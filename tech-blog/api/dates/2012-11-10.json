[{"title":"The Difference Between :x:element and :x:primitive","description":"<p>I was recently asked to clarify the differences between <code>:x:element</code> and <code>:x:primitive</code>, and when to use each one. It&rsquo;s actually pretty simple; the basic rule of thumb is this: always use <code>:x:element</code>. If you&rsquo;re only doing simple things in XHP you can stop reading now, but for the rest of you I&rsquo;ll get into the rare instances where you might use <code>:x:primitive</code>.<!-- more --></p>\n<p>First, the main difference. <code>:x:element</code> implements the <code>render()</code> method, which returns more XHP while <code>:x:primitive</code> implements to <code>stringify()</code> method, which returns a string. When you echo XHP to the page, it recursively calls <code>render()</code> on itself until it returns an <code>:x:primitive</code>. It will continue to do this to any children of an <code>:x:primitive</code> as well. Once the entire tree is just <code>:x:primitive</code>s (usually meaning just HTML nodes) it <code>stringify()</c","link":"https://codebeforethehorse.tumblr.com/post/35419887698","owner":"Stefan Parker"}]