[{"title":"Adopting GraphQL and Apollo in a Legacy Application","description":"<p>Trello is currently undergoing a big technological shift on the frontend, and an\nimportant part of this shift has been our approach to incrementally adopting\nGraphQL. We’ve used a client-side GraphQL schema (in a creative way) to quickly\nunlock the benefits of GraphQL. If you’re considering moving to GraphQL in your\nproduct, then this would be a great place to start before investing time and\nenergy into a server-side schema.</p>\n\n<p>For the past 10 years, the development teams at Trello have been writing features\nin Backbone and CoffeeScript backed by a solid REST API and WebSockets. This was\nbleeding edge when we first started working in this architecture, but as the\ncodebase has grown, we have begun to reach the limits of its capabilities. For\nexample, it became very difficult at times to understand how a piece of data\nended up in our client-side cache, and whether or not it was stale. Not to\nmention, our client-side cache was entirely proprietary (built on top of\nBackbone models)","link":"http://tech.trello.com/adopting-graphql-and-apollo/","owner":"Trello"},{"title":"Apollo Mission: The Pros and Cons of Being an Early Adopter of New Technology","description":null,"link":"https://stackoverflow.blog/2019/08/28/apollo-graphql-codepen-data-microservices-early-adopter/","owner":"Stack Overflow"},{"title":"ESCAPE/19: Why We're Building a Multi-Cloud Conference","description":"We attend and sponsor a lot of opinionated cloud shows each year and AWS re:Invent, Google Cloud Next and Microsoft Ignite have become the centers of discussion for all things cloud. And while each of these shows provides great content and an incredible range of speakers, we noticed that there was a lack of an un-opinionated conversation about multi-cloud or hybrid deployments.&#xA0;&#xA0;\nWithin one of these events, the mention of the term &#x2018;multi-cloud&#x2019; is contractually not allowed and sponsor materials are inspected and censored clean of any mentions of the word.","link":"https://www.cockroachlabs.com/blog/escape-19-why-were-building-a-multi-cloud-conference/","owner":"CockroachDB"},{"title":"How to background a running process over SSH","description":"Today I was logged in on my FreeNAS server to setup Duplicity backups. After initial success on a small dataset of about 100MB, I cloned my configuration to backup my long term storage dataset. It contains about 50GB of data - or so I thought. It turns out there&rsquo;s over 500GB there.\nI let the job run throughout the day, not minding it much. But then time comes to close my SSH connection, and I know what that means: the process will be killed.","link":"https://www.devroom.io/2019/08/28/how-to-background-a-running-process-over-ssh/","owner":"Ariejan de Vroom"},{"title":"Mock REST Backend Server for Angular and React Applications. ","description":"<div class=\"bigInt\" itemprop=\"description\">As I promised to continue the Angular/Ionic project series, as a developer perspective mock server is the most important to progress the development. We should not depend on the production or development  API for front-end development. This post is about creating a simple Node Express server with mock JSON object files. You can import the project to any of the front-end applications like Angular, React, Ionic and VueJS projects. </div><br><div class=\"cen\"><img alt=\"Mock REST Backend Server for Angular and React Applications. \" class=\"sri650\" itemprop=\"image\" src=\"https://github.com/srinivastamada/9lessonsImages/blob/master/other/mock-server.png?raw=true\"></div><br><a href=\"http://www.9lessons.info/2019/08/mock-rest-backend-server-for-angular.html#more\"></a><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/9lesson?a=4OziD-otSlQ:xO2e9tKZYtU:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/9lesson?d=yIl2AUoC8zA\" border=\"0\"><","link":"http://feedproxy.google.com/~r/9lesson/~3/4OziD-otSlQ/mock-rest-backend-server-for-angular.html","owner":"Srinivas Tamada"}]