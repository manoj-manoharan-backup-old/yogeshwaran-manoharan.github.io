[{"title":"Bundle HTML, CSS, And JavaScript To Be Served In A Golang Application","description":"\n                    <p>So I’ve been working on a project that uses the Go programming language. The application I’m building is a web application that I plan to distribute. The thing is, I don’t want to distribute hundreds of files to make it possible. The application has an API built with Go and the front-end that consumes the API is built with Angular. This lead me searching for a way to bundle all the files into the final binary.</p>\n<p>There are several packages that exist for bundling assets into a Golang application. Popular packages include <a href=\"https://github.com/jteeuwen/go-bindata\">go-bindata</a>, <a href=\"https://github.com/elazarl/go-bindata-assetfs\">go-bindata-assetfs</a>, and <a href=\"https://github.com/GeertJohan/go.rice\">go.rice</a>. I had the most success with go.rice, so we’re going to explore it in this article.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2017/03/bundle-html-css-javasc","link":"https://www.thepolyglotdeveloper.com/2017/03/bundle-html-css-javascript-served-golang-application/","owner":"Nic Raboy"}]