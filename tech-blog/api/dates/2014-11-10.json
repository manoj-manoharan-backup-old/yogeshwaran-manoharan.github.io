[{"title":"About UTF-8 conversions in Mono","description":"<p>This post is a logical continuation of the Jon Skeet&rsquo;s blog post <a href=\"http://codeblog.jonskeet.uk/2014/11/07/when-is-a-string-not-a-string\">“When is a string not a string?”</a>. Jon showed very interesting things about behavior of ill-formed Unicode strings in .NET. I wondered about how similar examples will work on Mono. And I have got very interesting results.</p>\n<h3 id=\"experiment-1-compilation\">Experiment 1: Compilation</h3>\n<p>Let&rsquo;s take the Jon&rsquo;s code with a small modification. We will just add <code>text</code> null check in <code>DumpString</code>:</p>\n<div class=\"highlight\"><pre class=\"chroma\"><code class=\"language-cs\" data-lang=\"cs\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">Syste","link":"https://aakinshin.net/posts/mono-utf8-conversions/","owner":"Andrey Akinshin"},{"title":"Error Handling In Go, Part II","description":"Introduction\nIn part I of this post, we learned about the error interface and how the standard library provides support for creating error interface values via the errors package. We also learned how to work with error interface values and use them to identify when an error has occured. Finally, we saw how some packages in the standard library export error interface variables to help us identify specific errors.","link":"https://www.ardanlabs.com/blog/2014/11/error-handling-in-go-part-ii.html","owner":"William Kennedy"},{"title":"Tracking Pageviews with Google Analytics and Angular JS","description":"\n                    <p>Recently I noticed in my Google analytics dashboard that Analytics wasn’t tracking the full url of the page of my Angular JS site. I was tracking individual pageviews using this code in my <strong>app.js</strong> file:</p>\n<div class=\"highlight\"><pre class=\"chroma\"><code class=\"language-fallback\" data-lang=\"fallback\">MyApp.run(function($rootScope, $location, $window){\n    $rootScope.$on(&#39;$routeChangeSuccess&#39;, function() {\n        $window._gaq.push([&#39;_trackPageview&#39;, $location.path()]);\n    })\n})\n</code></pre></div>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2014/11/tracking-pageviews-google-analytics-angular-js/'>Tracking Pageviews with Google Analytics and Angular JS</a> appeared first on <a rel='nofollow' href='https://www.thepolyglotdeveloper.com'>The Polyglot Developer</a>.</p>\n                    \n                ","link":"https://www.thepolyglotdeveloper.com/2014/11/tracking-pageviews-google-analytics-angular-js/","owner":"Nic Raboy"}]