[{"title":"Building A RESTful API With Node.js And Hapi Framework","description":"\n                    <p>Back when I was really getting into the swing of Node.js, I had written about <a href=\"https://www.thepolyglotdeveloper.com/2015/10/create-a-simple-restful-api-with-node-js/\">creating a simple RESTful API</a> that made use of the Express framework. Express was, and still is, one of the most popular frameworks for creating web applications with Node.js. However, this doesn&rsquo;t mean it is the best solution.</p>\n<p>Recently I&rsquo;ve been hearing a lot around Hapi for Node.js. The common feedback that I hear is that it is specifically designed for creating RESTful web services making them significantly easier to create without as much boilerplate code.</p>\n<p>We&rsquo;re going to see how to create a simple API using <a href=\"https://hapijs.com/\">Hapi</a> as well as packages such as <a href=\"https://github.com/hapijs/joi\">Joi</a> for request validation.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotd","link":"https://www.thepolyglotdeveloper.com/2017/10/building-restful-api-nodejs-hapi-framework/","owner":"Nic Raboy"},{"title":"Friday Q&A 2017-10-06: Type-Safe User Defaults\n","description":"It's fun to re-imagine traditional techniques with a Swift twist. I've implemented a type-safe layer on top of the venerable <code>NSUserDefaults</code>, and I'm going to discuss my little library today. Credit/blame for this idea goes to local reader Jos√© Vazquez, although he inspired it by accident while talking about something else.<br><a href=\"http://www.mikeash.com/pyblog/friday-qa-2017-10-06-type-safe-user-defaults.html\">(Read More)</a>","link":"http://www.mikeash.com/pyblog/friday-qa-2017-10-06-type-safe-user-defaults.html","owner":"Mike Ash"}]