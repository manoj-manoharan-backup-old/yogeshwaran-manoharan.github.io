[{"title":"Systems that defy detailed understanding","description":"Last week, I wrote about the mindset that computer systems can be understood, and behaviors can be explained, if we’re willing to dig deep enough into the stack of abstractions our software is built atop. Some of the ensuing discussion on Twitter and elsewhere lead me to write this followup, in which I want to run through a few classes of systems where I’ve found pursuing in-detail understanding of the system wasn’t the right answer.","link":"https://blog.nelhage.com/post/systems-that-defy-understanding/","owner":"Nelson Elhage"},{"title":"The Zen of Go","description":"This article was derived from my GopherCon Israel 2020 presentation. It’s also quite long. If you’d prefer a shorter version, head over to the-zen-of-go.netlify.com. A recording of the presentation is available on YouTube. How should I write good code? Something that I’ve been thinking about a lot recently, when reflecting on the body of my","link":"https://dave.cheney.net/2020/02/23/the-zen-of-go","owner":"Dave Cheney"}]