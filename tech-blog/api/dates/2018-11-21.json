[{"title":"DeleteRange: A New Native RocksDB Operation","description":"<h2 id=\"motivation\">Motivation</h2>\n\n<h3 id=\"deletion-patterns-in-lsm\">Deletion patterns in LSM</h3>\n\n<p>Deleting a range of keys is a common pattern in RocksDB. Most systems built on top of\nRocksDB have multi-component key schemas, where keys sharing a common prefix are\nlogically related. Here are some examples.</p>\n\n<p>MyRocks is a MySQL fork using RocksDB as its storage engine. Each keyâ€™s first\nfour bytes identify the table or index to which that key belongs. Thus dropping\na table or index involves deleting all the keys with that prefix.</p>\n\n<p>Rockssandra is a Cassandra variant that uses RocksDB as its storage engine. One\nof its admin tool commands, <code class=\"language-plaintext highlighter-rouge\">nodetool cleanup</code>, removes key-ranges that have been migrated\nto other nodes in the cluster.</p>\n\n<p>Marketplace uses RocksDB to store product data. Its key begins with product ID,\nand it stores various data associated with the product in separate keys. When a\nproduct is removed,","link":"http://rocksdb.org/blog/2018/11/21/delete-range.html","owner":"RocksDB"}]