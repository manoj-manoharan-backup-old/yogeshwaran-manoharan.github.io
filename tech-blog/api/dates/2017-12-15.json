[{"title":"Containerizing A Node.js With Express Image Processing RESTful API Using Docker","description":"\n                    <p><a href=\"https://www.docker.com\">Docker</a> is a great way to package and deploy web applications. Applications that have been containerized can easily be created, destroyed, or even moved between servers, as long as the servers are using the Docker runtime.</p>\n<p>Not too long ago I wrote about creating a RESTful API that could process images and generate Android compliant launcher icons. This article was titled, <a href=\"https://www.thepolyglotdeveloper.com/2017/12/android-launcher-icon-generator-nodejs-jimp\">Create an Android Launcher Icon Generator RESTful API with Node.js, and Jimp</a> and it was powered by Express Framework. The application could be served on any properly configured server with Node.js. The catch here is that server configuration is never easy or quick.</p>\n<p>We&rsquo;re going to see how to package our web application into a container using Docker.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https:","link":"https://www.thepolyglotdeveloper.com/2017/12/containerizing-nodejs-express-image-processing-restful-api-docker/","owner":"Nic Raboy"},{"title":"Friday Q&A 2017-12-08: Type Erasure in Swift\n","description":"You might have heard the term type erasure. You might have even used type-erased types in the standard library, such as <code>AnySequence</code>. But what exactly <em>is</em> type erasure and how do you do it yourself? In this article, I'll explore type erasure, why you'd want it, and how to make it happen, a topic suggested by Lorenzo Boaro.<br><a href=\"http://www.mikeash.com/pyblog/friday-qa-2017-12-08-type-erasure-in-swift.html\">(Read More)</a>","link":"http://www.mikeash.com/pyblog/friday-qa-2017-12-08-type-erasure-in-swift.html","owner":"Mike Ash"},{"title":"InVision Expands Their Bug Bounty Program with Bugcrowd","description":"Last year we wrote about our new bug bounty program launch with Bugcrowd, and now we are excited to announce that we are expanding the scope of our program and increasing our rewards by 80%!\nWe are adding our marketing sites and InVision&rsquo;s enterprise service offering to the program profile. This will give security researchers around the world greater opportunity to identify and submit application vulnerabilities with a new premium paid to expert level exploitation.","link":"https://engineering.invisionapp.com/post/bugcrowd_expanded_bug_bounty/","owner":"InVision"}]