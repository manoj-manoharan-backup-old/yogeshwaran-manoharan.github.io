[{"title":"Install Android And Telerik NativeScript In Ubuntu Linux","description":"\n                    <p>Ubuntu Linux is one heck of an operating system. It is fast, visually appealing, and it is great for development. Previously I wrote about how to <a href=\"https://www.thepolyglotdeveloper.com/2014/09/install-android-cordova-ionic-framework-ubuntu/\">install Ionic Framework and all the required dependencies for development in Ubuntu</a>, but this time we’re going to look at how to do the same for Telerik NativeScript.</p>\n<p>We’re going to review a series of shell commands that will get the Java Development Kit (JDK), the Node Package Manager (NPM), the Android SDK, and <a href=\"https://www.nativescript.org/\">Telerik NativeScript</a> up and running in no time.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2016/02/install-android-telerik-nativescript-ubuntu-linux/'>Install Android And Telerik NativeScript In Ubuntu Linux</a> appeared first on <a rel='nofollow' href='https://www.thepolyglotd","link":"https://www.thepolyglotdeveloper.com/2016/02/install-android-telerik-nativescript-ubuntu-linux/","owner":"Nic Raboy"},{"title":"Testing Degraded Network Scenarios with rkt","description":"The current state of testing Testing applications is important. Some even go as far as saying, “If it isn’t tested, it doesn’t work”. While that may have both a degree of truth and untruth to it, the rise of continuous integration (CI) and automated testing have shown that the software industry is taking testing seriously.\nHowever, there is at least one area of testing that is difficult to automate and, thus, hasn’t been adequately incorporated into testing scenarios: poor network connectivity.","link":"/blog/2016/02/testing-degraded-network-scenarios-with-rkt/","owner":"Kinvolk"}]