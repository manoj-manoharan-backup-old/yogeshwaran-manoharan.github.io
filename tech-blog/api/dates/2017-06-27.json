[{"title":"For Range Semantics","description":"Prelude These are good posts to read first to better understand the material presented in this post:\nIndex of the four part series:\n1) Language Mechanics On Stacks And Pointers\n2) Language Mechanics On Escape Analysis\n3) Language Mechanics On Memory Profiling\n4) Design Philosophy On Data And Semantics\nThe idea of value and pointer semantics are everywhere in the Go programming language. As stated before in those earlier posts, semantic consistency is critical for integrity and readability.","link":"https://www.ardanlabs.com/blog/2017/06/for-range-semantics.html","owner":"William Kennedy"},{"title":"Learning from the legacy code","description":"\n<p>We all love to write new stuff and learn about things. But when we&rsquo;ve got to do something in one of\nthe older applications we&rsquo;d rather avoid it and lag as long as possible hoping that someone else\nwill handle it. You shouldn&rsquo;t be afraid of legacy code (as long it is not <a href=\"https://tommcfarlin.com/wp-content/uploads/2014/08/xbig-ball-of-mud.jpg.pagespeed.ic.FH0nXJQELT.jpg\">ball of\nmud</a>).\nYou should take the opportunity to look into the past, and learn from it as much as possible.</p>\n<p><a href=\"https://blog.pchudzik.com/201706/learning-from-legacy/\">Read more</a></p>","link":"https://blog.pchudzik.com/201706/learning-from-legacy/","owner":"Paweł Chudzik"},{"title":"Speed and Stability: Yahoo Mail’s Forward-Thinking Continuous Integration and Delivery Pipeline","description":"<p>By Mohit Goenka, Senior Engineering Manager</p><p><a href=\"https://yahooeng.tumblr.com/post/162320493306/yahoo-mails-new-tech-stack-built-for-performance\">Building the technology</a> powering the best consumer email inbox in the world is no easy task. When you start on such a journey, it is important to consider how to deliver such an experience to the users. After all, any consumer feature we build can only make a difference after it is delivered to everyone via the tech pipeline. </p><p>As we began building out the <a href=\"https://yahoomail.tumblr.com/post/162320728976/a-cleaner-faster-and-more-powerful-yahoo-mail\">new version of Yahoo Mail</a>, we wanted to ensure that our internal developer productivity would not be hindered by how our pipelines work. Keeping this in mind, we identified the following principles as most important while designing the delivery pipeline for the new Yahoo Mail experience: </p><ul><li>Product updates are pushed at regular intervals</li><li>Releases a","link":"https://yahooeng.tumblr.com/post/162320459636","owner":"Yahoo"},{"title":"The Limits of the CAP Theorem","description":"The CAP theorem is a fundamental part of the theory of distributed systems. It states that in the presence of partitions (i.e. network failures), a system cannot be both consistent and available, and must choose one of the two.\nCockroachDB chooses consistency, and is therefore a CP system in the terminology of the CAP theorem (as opposed to an AP system, which favors availability over consistency). Both consistency and availability are crucial to any business, and you might wonder how you are expected to choose between such important goals.","link":"https://www.cockroachlabs.com/blog/limits-of-the-cap-theorem/","owner":"CockroachDB"},{"title":"Yahoo Mail’s New Tech Stack, Built for Performance and Reliability","description":"<p>By Suhas Sadanandan, Director of Engineering </p><p>When it comes to performance and reliability, there is perhaps no application where this matters more than with email. Today, <a href=\"https://yahoomail.tumblr.com/post/162320728976/a-cleaner-faster-and-more-powerful-yahoo-mail\">we announced</a> a new Yahoo Mail experience for desktop based on a completely rewritten tech stack that embodies these fundamental considerations and more. </p><p>We built the new Yahoo Mail experience using a best-in-class front-end tech stack with open source technologies including React, Redux, Node.js, <a href=\"https://github.com/yahoo/react-intl\">react-intl</a> (open-sourced by Yahoo), and others. A high-level architectural diagram of our stack is below.<br/></p><p><a href=\"https://s.yimg.com/ge/default/691231/Yahoo_Mail_Tech_Stack.png\"></a></p><p><a href=\"https://s.yimg.com/ge/default/691231/Yahoo_Mail_Tech_Stack.png\"></a></p><a href=\"https://s.yimg.com/ge/default/691231/Yahoo_Mail_Tech_Stack.png\"><f","link":"https://yahooeng.tumblr.com/post/162320493306","owner":"Yahoo"}]