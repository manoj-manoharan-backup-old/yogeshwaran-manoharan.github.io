[{"title":"How High Are Your Tests?","description":"<p>How big can a unit test be? How small can an integration test be?</p>\n\n<p>It’s easy to argue about whether a test is a ‘true’ unit test or\nnot. If we test several classes together, is it still a unit test? If\nwe use a small external API, must we call it an integration test?</p>\n\n<p>The problem is that testing is a <strong>spectrum</strong>, but our terminology only\nallows discrete levels.</p>\n\n<h2 id=\"putting-a-number-on-it\">Putting A Number On It</h2>\n\n<p>I propose we treat testing as a <strong>numerical scale</strong> instead. Let’s\nintroduce a concept of <strong>test height</strong>, from 0 to 100.</p>\n\n<p>At 0, we have low-level, isolated unit tests. They run quickly, they run\nin process, and they’re extremely reliable. No setup or teardown is\nrequired.</p>\n\n<p>At 100, we have high-level tests of full computer systems. We spin up\nan elaborate infrastructure of databases, external services, and\nexercise real protocols. Many processes run, runtime can be very\nvariable, and flakine","link":"http://www.wilfred.me.uk/blog/2019/03/04/how-high-are-your-tests/","owner":"Wilfred Hughes"},{"title":"Two-Factor Authentication With TOTP Using Node.js And Speakeasy","description":"\n                    <p>Almost two years ago I had written a tutorial around <a href=\"https://www.thepolyglotdeveloper.com/2017/05/implement-2fa-time-based-one-time-passwords-node-js-api/\">2FA in a Node.js API with time-based one-time passwords</a>. If you&rsquo;re unfamiliar, two-factor authentication is becoming the norm, which it wasn&rsquo;t necessarily back in 2017. If you&rsquo;re managing user accounts in your web applications, it is critical that you offer your users a second factor of authentication to prevent phishing and malicious login attempts.</p>\n<p>While the previous tutorial is still valid, it uses a less popular library to accomplish the task. This time around we&rsquo;re going to explore using a more popular library called <a href=\"https://github.com/speakeasyjs/speakeasy\">Speakeasy</a> to manage two-factor authentication (2FA) within our Node.js with Express.js application.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://","link":"https://www.thepolyglotdeveloper.com/2019/03/two-factor-authentication-totp-using-nodejs-speakeasy/","owner":"Nic Raboy"}]