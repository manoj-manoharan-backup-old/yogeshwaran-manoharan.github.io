[{"title":"\nAdventures in message queues\n","description":"EDIT: In case you missed it, Disque source code is now available at http://github.com/antirez/disque\n","link":"\nhttp://antirez.com/news/88\n","owner":"Antirez"},{"title":"Feature Spotlight: Templates","description":"<p>If you find yourself typing the same email over and over, templates are your new best friend. Whether you&rsquo;re a salesperson pitching to potential clients or a support technician emailing instructions, templates can bring consistency to your emails, help you save time, and increase productivity.</p>\n\n<p class=\"poet-read-more\"><a href=\"/blog/feature-spotlight-templates\" title=\"Read more of Feature Spotlight: Templates\">Continue reading</a></p>","link":"https://mixmax.com/blog/feature-spotlight-templates","owner":"Mixmax"},{"title":"NSUserDefaults Performance Boost","description":"<p>Since iOS 8 was released weâ€™ve noticed some sluggishness when using <a href=\"http://flipboard.com\">Flipboard</a> in the simulator. When taking a trace with Instruments in normal use we noticed a significant amount of time was being spent in <code class=\"highlighter-rouge\"><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>CFPreferences</pre></td></tr></tbody></table></code>.<!--break--></p>\n\n<center>\n    <div class=\"row\">\n        <img src=\"/assets/nsuserdefaults-performance/before.png\" style=\"max-width:95%;\" />\n    </div>\n</center>\n\n<p>On Twitter, an Apple engineer acknowledged that there were some changes in iOS 8 that added something called <code class=\"highlighter-rouge\"><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>cfprefsd</pre></td></tr></tbody></table></code>, and that emulating that in the simulator required synchronous ","link":"http://engineering.flipboard.com//2015/03/nsuserdefaults-performance","owner":"Flipboard"},{"title":"Parse With The Shunting Yard Algorithm Using JavaScript","description":"\n                    <p>Anyone who knows how to program can probably solve a mathematical equation such as <code>5 + 3 * 6 - ( 5 / 3 ) + 7</code>, but how might you get a computer to understand the appropriate order of operations?  The equation I listed is in a format known as Infix Notation.</p>\n<p>Infix Notation via <a href=\"http://en.wikipedia.org/wiki/Infix_notation\">Wikipedia</a>:</p>\n<blockquote>\n<p>Infix notation is the notation commonly used in arithmetical and logical formulae and statements. It is characterized by the placement of operators between operands.</p>\n</blockquote>\n<p>This format is not the most ideal to work with when attempting to solve.</p>\n<p>Instead it is more appropriate to use format such as <code>5 3 6 * + 5 3 / - 7 +</code> which is more commonly known as Postfix Notation or Reverse Polish Notation (RPN). This conversion can be accomplished by what is known as the Shunting Yard algorithm.</p>\n                    \n                        <p>The post <a rel=","link":"https://www.thepolyglotdeveloper.com/2015/03/parse-with-the-shunting-yard-algorithm-using-javascript/","owner":"Nic Raboy"}]