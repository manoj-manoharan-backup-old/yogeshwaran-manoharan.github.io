[{"title":"How To Get Programming Help In Forums And On My Blog","description":"\n                    <p>So I answer enough forum, Stack Overflow, and blog questions to feel it is now necessary to teach people how to properly seek programming help using these outlets or similar. I feel it is necessary because so much time can be saved for everyone when this is done correctly.</p>\n<p>As someone who provides free resources and programming help, I often get a ton of questions that annoy me. Everyone like me understands that people want help, but may not know the best ways to get it. We’ll see the correct way to go about getting it.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2015/10/how-to-get-programming-help-in-forums-and-on-my-blog/'>How To Get Programming Help In Forums And On My Blog</a> appeared first on <a rel='nofollow' href='https://www.thepolyglotdeveloper.com'>The Polyglot Developer</a>.</p>\n                    \n                ","link":"https://www.thepolyglotdeveloper.com/2015/10/how-to-get-programming-help-in-forums-and-on-my-blog/","owner":"Nic Raboy"},{"title":"Migrating production services to AWS Elastic Beanstalk without downtime","description":"<p>Mixmax started out as a monolithic Meteor application hosted on a PaaS provider (<a href=\"https://modulus.io/\" target=\"_blank\">Modulus.io</a>) that specialized in deploying NodeJS and <a href=\"https://www.meteor.com/\" target=\"_blank\">Meteor</a> applications. As our traffic and userbase grew, we quickly ran into scaling problems with the Meteor framework, poorly optimized prototype code, and the limits of our cloud hosting provider. We’ve blogged about some of our scaling projects previously: <a href=\"/blog/scaling-mixmax-front-end\" target=\"_blank\">Scaling Mixmax: Front-end performance</a>, <a href=\"/blog/unicode-woes-in-javascript\" target=\"_blank\">Unicode woes in Javascript</a>, and <a href=\"/blog/tag/engineering\" target=\"_blank\">more</a>. In addition to scaling difficulties, there were features that we were looking for that Modulus.io didn't offer at the time. We investigated other PaaS providers like Heroku, but eventually decided that moving to AWS would give us the best feature ","link":"https://mixmax.com/blog/migrating-production-services-to-aws-elastic-beanstalk-without-downtime","owner":"Mixmax"}]