[{"title":"Electric Geek Transportation Systems","description":"kg-card-begin: markdown","link":"https://blog.codinghorror.com/electric-geek-transportation-systems/","owner":"Jeff Atwood"},{"title":"Go compiler intrinsics","description":"Go allows authors to write functions in assembly if required. This is called a stub or forward declaration. package asm // Add returns the sum of a and b. func Add(a int64, b int64) int64 Here we’re declaring Add, a function which takes two int64‘s and returns their sum.Add is a normal Go function declaration,","link":"https://dave.cheney.net/2019/08/20/go-compiler-intrinsics","owner":"Dave Cheney"},{"title":"How to automatically generate strongly typed classes for your Resw files","description":"I recently released an open-source extension for Visual Studio 2017 and Visual Studio 2019 adding many highly valuable features to .resw files, including one of the major feature from .resx missing: access to strings via strongly typed static properties. In addition to this feature, ReswPlus also provides: Auto-generation of methods to format your strings Support typed and named parameters, literal strings, string references and Macros Pluralization support (for 196 languages!). Including: support empty states when the number of items is...","link":"https://www.rudyhuyn.com/blog/2019/08/20/how-to-automatically-generate-strongly-typed-classes-for-your-resw-files/","owner":"Rudy Huyn"},{"title":"What’s in the Works: Improving Feedback for All Users","description":null,"link":"https://stackoverflow.blog/2019/08/20/upcoming-on-stack-overflow/","owner":"Stack Overflow"},{"title":"Zero instrumentation observability for AWS Lambda","description":"Learn how to get instant visibility into your AWS Lambda functions with zero instrumentation using Serverless Framework.","link":"https://serverless.com/blog/zero-instrumentation-observability-aws-lambda-functions/","owner":"Serverless"}]