[{"title":"Onboarding at TrackMaven","description":"<p>Today I will be talking about onboarding! We will cover what the heck onboarding means, why it is important, and then <em>gasp</em> I'll attempt to grade how well my new coworkers onboarded me in my first month. Bear in mind that this will be focused on engineering only.</p>\n<p>With that, let us begin!</p>\n<h2>What is onboarding?</h2>\n<blockquote>\n<p>Onboarding is the mechanism with which you take new employees and turn them into <strong>autonomous</strong>, <strong>confident</strong>, and <strong>productive</strong> members of the company.</p>\n</blockquote>\n<h3>Autonomy</h3>\n<p>Having autonomy goes a long way toward being professionally satisfied. Two critical measures of autonomy are how much supervision is necessary and whether one is able to choose which types of problems to work on.</p>\n<h3>Confidence</h3>\n<p>Is your onboarding process creating engineers who believe they are valuable and who feel that they can actually enact change? Confident engineers are more likely to learn ","link":"http://engineroom.trackmaven.com/blog/onboarding-at-trackmaven/","owner":"TrackMaven"},{"title":"Using Pointers In Go","description":"Introduction\nI am asked quite a bit about when and when not to use pointers in Go. The problem most people have, is that they try to make this decision based on what they think the performance tradeoff will be. Hence the problem, donâ€™t make coding decisions based on unfounded thoughts you may have about performance. Make coding decisions based on the code being idiomatic, simple, readable and reasonable.","link":"https://www.ardanlabs.com/blog/2014/12/using-pointers-in-go.html","owner":"William Kennedy"}]