[{"title":"Autoscaling CI/CD on Google Cloud: Part 2","description":"<p>In the last post we drew a picture of what was detailed as a distributed autoscaling system using <a href=\"https://cloud.google.com/\">Google Cloud Platform</a>’s <a href=\"https://cloud.google.com/compute/\">Compute Engine</a> resources, specifically using <a href=\"https://cloud.google.com/compute/docs/instance-groups/\">Google Compute Managed Instance Groups</a>. A few limitations and challenges with the distributed approach lead us to further research and design for autoscaling using a central autoscaler, and in this post we talk about how we used the <a href=\"https://www.jetbrains.com/teamcity/\">TeamCity server</a> to centrally autoscale our CI/CD system and the positive effect this change has had on the overall system’s cost and developers’ productivity.</p>\n\n<p>The second approach to designing auto-scalable agent pools for our CI/CD system was making use of the TeamCity server as an autoscaler or an autoscaling orchestrator. Just like the distributed cloud-native approach, the con","link":"https://wecode.wepay.com/posts/cicd-autoscale-two","owner":"WePay"}]