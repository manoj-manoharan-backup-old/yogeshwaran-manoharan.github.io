[{"title":"Higher write throughput with `unordered_write` feature","description":"<p>Since RocksDB 6.3, The <code class=\"language-plaintext highlighter-rouge\">unordered_write=</code>true option together with WritePrepared transactions offers 34-42% higher write throughput compared to vanilla RocksDB. If the application can handle more relaxed ordering guarantees, the gain in throughput would increase to 63-131%.</p>\n\n<h3 id=\"background\">Background</h3>\n\n<p>Currently RocksDB API delivers the following powerful guarantees:</p>\n<ul>\n  <li>Atomic reads: Either all of a write batch is visible to reads or none of it.</li>\n  <li>Read-your-own writes: When a write thread returns to the user, a subsequent read by the same thread will be able to see its own writes.</li>\n  <li>Immutable Snapshots: The reads visible to the snapshot are immutable in the sense that it will not be affected by any in-flight or future writes.</li>\n</ul>\n\n<h3 id=\"unordered_write\"><code class=\"language-plaintext highlighter-rouge\">unordered_write</code></h3>\n\n<p>The <code class=\"language-plaintext hig","link":"http://rocksdb.org/blog/2019/08/15/unordered-write.html","owner":"RocksDB"},{"title":"Introducing the New React DevTools","description":null,"link":"https://reactjs.org/blog/2019/08/15/new-react-devtools.html","owner":"React"},{"title":"SQL Prober: Black-box Monitoring in Managed CockroachDB","description":"This blog post reflects my work as an intern this summer with the SRE team at Cockroach Labs. Earlier this year, we started building a service offering called Managed CockroachDB. While working with a group of beta customers, we found an unconventional solution to a huge problem: how do we create black-box monitoring in a distributed system?\nImproving our monitoring system: black-box monitoring! Four months into our beta release, we had an incident: creating new databases and tables was broken globally on one of our internal beta clusters.","link":"https://www.cockroachlabs.com/blog/sql-prober-black-box-monitoring-in-managed-cockroachdb/","owner":"CockroachDB"},{"title":"Tracking API Gateway metrics in Serverless applications","description":"Monitoring web APIs in Serverless applications can be difficult. See how to do it with the Serverless Framework.","link":"https://serverless.com/blog/monitoring-api-gateway-metrics/","owner":"Serverless"}]