[{"title":"Using Airbrake with Rake and not Rails","description":"<p>We use <a href=\"http://airbrake.io\">Airbrake</a> for our error reporting. An error happens,\nthe error gets sent to Airbrake and then we&#39;re notified via email. We can then\ninvestigate all the goodness from their website. Fantastic!</p>\n\n<p>Most Ruby apps are centered around some kind of web service (mainly Ruby on Rails).\nAs such, Airbrake has <em>really</em> good Rails integration â€“ even on their rake tasks!\nAirbrake is in a lot of our projects, some of which that do not use Rails, however.</p>\n\n<p>A problem that I noticed while debugging why a rake task hadn&#39;t reported errors to Airbrake was two fold:</p>\n\n<ol>\n<li>Airbrake is <strong>not</strong> configured to rescue from rake exceptions by default</li>\n<li>Even if you have it enabled, it only works if you have <em>Rails loaded</em></li>\n</ol>\n\n<p>Isn&#39;t that crazy? <a href=\"https://github.com/airbrake/airbrake/blob/51bf71ba517e9dbb1adb26f52eb6fa73a2f21c86/lib/airbrake/railtie.rb#L9\">Here&#39;s the (insane) code that ne","link":"https://techblog.thescore.com/2014/05/12/using-airbrake-with-rake-and-not-rails/","owner":"theScore"}]