[{"title":"Choosing Index Keys for CockroachDB","description":"3 Basic Rules for Choosing Indexes There are a few basic rules to keep in mind when choosing indexes for a database. A good index should have these three properties:\nUsefulness: Speed up the execution of some queries (or enforce a constraint) Clustering: Keep records that are likely to be accessed together near each other Scattering: Keep records that are unlikely to be accessed together far apart Usefulness The first rule is simply a reminder that indexes aren&#x2019;t free, and if it&#x2019;s not helping the application somehow you&#x2019;re better off without it.","link":"https://www.cockroachlabs.com/blog/how-to-choose-db-index-keys/","owner":"CockroachDB"},{"title":"Creating a Code Review Culture, Part 1: Organizations and Authors","description":"Code review is one of the most effective tools we have as engineers to \r\nsafeguard the quality of our code. In this series of posts, we describe \r\nwhat a strong code review culture looks like and how to create it.","link":"https://engineering.squarespace.com/blog/2019/code-review-culture-part-1","owner":"Squarespace"},{"title":"Of Pythons and Camels","description":"<p>Welcome to another post in our series of how to use OCaml for machine learning.\nIn previous posts we’ve discussed <a href=\"https://blog.janestreet.com/deep-learning-experiments-in-ocaml/\">artistic style-transfer</a> and\n<a href=\"https://blog.janestreet.com/playing-atari-games-with-ocaml-and-deep-rl/\">reinforcement learning</a>. If you haven’t read these feel\nfree to do so now, we’ll wait right here until you’re done. Ready? Ok, let’s\ncontinue …</p>\n\n","link":"https://blog.janestreet.com/of-pythons-and-camels/","owner":"Jane Street"}]