[{"title":"Singleton Design Pattern in Go","description":"Multi-threaded applications are very complicated, especially when your code is not organized and consistent with how resources are accessed, managed and maintained. If you want to minimize bugs you need philosophies and rules to live by. Here are some of mine:\nResource allocation and de-allocation should be abstracted and managed within the same type. Resource thread safeness should be abstracted and managed within the same type. A public interface should be the only means to accessing shared resources.","link":"https://www.ardanlabs.com/blog/2013/07/singleton-design-pattern-in-go.html","owner":"William Kennedy"}]