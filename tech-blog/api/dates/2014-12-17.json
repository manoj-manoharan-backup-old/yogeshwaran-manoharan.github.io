[{"title":"Gmail just broke every Chrome extension. Here's how we fixed ours","description":"<h4>The bug: “Refused to load the script...  because it violates the following Content Security Policy”</h4>\n\n<p>Yesterday <a href=\"http://techcrunch.com/2014/12/16/gmail-now-protects-your-inbox-from-malevolent-extensions/\" target=\"_blank\">Gmail introduced a Content Security Policy</a> that broke Mixmax and other Chrome extensions. We jumped on it quickly and pushed a fix within an hour. Here’s how we diagnosed and solved the problem.</p>\n\n<p class=\"poet-read-more\"><a href=\"/blog/gmail-just-broke-every-chrome-extension\" title=\"Read more of Gmail just broke every Chrome extension. Here's how we fixed ours\">Continue reading</a></p>","link":"https://mixmax.com/blog/gmail-just-broke-every-chrome-extension","owner":"Mixmax"},{"title":"Use Grunt To Lint And Uglify Your JavaScript Project","description":"\n                    <p>JavaScript is a forgiving language unlike Java or C#. Because of this, we can’t always trust that our code is correct. I don’t mean that the logic may not be correct, I’m talking about syntax and structure.</p>\n<p>Lint via <a href=\"http://en.wikipedia.org/wiki/Lint_%28software%29\">Wikipedia</a>:</p>\n<blockquote>\n<p>…modern lint checkers are often used to find code that doesn’t correspond to certain style guidelines. They can also be used as simple debuggers for common errors, or hard to find errors such as heisenbugs</p>\n</blockquote>\n<p>In addition to needing to lint your code for errors, you may also consider compressing and obfuscating your source code. This can be done through the process of uglification or minification.</p>\n<p>Minification via <a href=\"http://en.wikipedia.org/wiki/Minification_%28programming%29\">Wikipedia</a>:</p>\n<blockquote>\n<p>Minification (also minimisation or minimization), in computer programming languages and especially JavaScript, i","link":"https://www.thepolyglotdeveloper.com/2014/12/use-grunt-lint-uglify-javascript-project/","owner":"Nic Raboy"}]