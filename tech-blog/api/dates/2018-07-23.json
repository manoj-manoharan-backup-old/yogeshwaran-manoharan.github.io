[{"title":"Releasing An Android Application Built With NativeScript And Vue.js","description":"\n                    <p>So you&rsquo;ve just built an awesome new Android application using <a href=\"https://www.nativescript.org/\">NativeScript</a> and the <a href=\"https://vuejs.org/\">Vue.js</a> JavaScript framework and you&rsquo;re wondering what&rsquo;s next. Unless this is an internal application, you&rsquo;re probably going to want to publish the application to a marketplace like Google Play. The thing is, up until now, you&rsquo;ve probably only been working with a debug build of your Android application and binary.</p>\n<p>We&rsquo;re going to see how to take a NativeScript application that uses Vue.js and build an <a href=\"https://developer.android.com/\">Android</a> binary for release using a signing key and some command line magic.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2018/07/releasing-android-application-built-nativescript-vuejs/'>Releasing An Android Application Built With NativeScript And V","link":"https://www.thepolyglotdeveloper.com/2018/07/releasing-android-application-built-nativescript-vuejs/","owner":"Nic Raboy"},{"title":"Troubleshooting `npm link`","description":"<p>As of this writing, Mixmax runs 15 Node microservices. We keep this manageable by sharing a ton of\ncode between services, in the form of npm packages both\n<a href=\"https://github.com/mixmaxhq?utf8=%E2%9C%93&amp;q=&amp;type=source&amp;language=javascript\">public</a> and private.</p>\n<p>To keep <em>those</em> packages manageable, we develop them in their own repositories. But this poses a\nchallenge for local development&mdash;how do we quickly test a new version of a package inside another?</p>\n<p class=\"poet-read-more\"><a href=\"/blog/troubleshooting-npm-link\" title=\"Read more of Troubleshooting `npm link`\">Continue reading</a></p>","link":"https://mixmax.com/blog/troubleshooting-npm-link","owner":"Mixmax"}]