[{"title":"Enabling Trac Email notifications","description":"If you&rsquo;ve ever reported a but to Ruby on Rails, you&rsquo;ll have noticed that their Trac has nice email notification feature. And I bet you want that in your Trac as well!\nNow, email notification are nothing exotic. You don&rsquo;t need any plugins, just an outgoing SMTP server and access to your trac.ini file.\nIn your trac directory open up conf/trac.ini and look for the [notification] header. Make sure you have at least the following settings.","link":"https://www.devroom.io/2008/04/09/enabling-trac-email-notifications/","owner":"Ariejan de Vroom"},{"title":"Here we go again: WordPress 2.5","description":"Okay, here we go then. I&rsquo;ve managed to drop Mephisto after only a few weeks of service.\nAs a Rails developer, I liked the idea of running my own blog on something Rails. However, Mephisto was a big disappointment. Especially compared to WordPress 2.5. Mephisto has been on life support for quite a while now, and it&rsquo;s just too complex to be easy to hack. Now, don&rsquo;t get me wrong. I love hacking Ruby, but not too much on my blog.","link":"https://www.devroom.io/2008/04/09/here-we-go-again-wordpress-25/","owner":"Ariejan de Vroom"},{"title":"Rails Snippet: Caching expensive calls","description":"In Rails, from time to time, you may encounter you have a method you call several times, but which returns always the same result. For example, have the following:\nclass Person &lt; ActiveRecord::Base has_many :articles def get_approved_articles self.articles.find(:all, :conditions =&gt; {:approved =&gt; true}, :order =&gt; &#39;approved_on DESC&#39;) end end A query is fired every time you call Person#get_approved_articles. To cache the result of the query during this request, just add a bit of magic","link":"https://www.devroom.io/2008/04/09/rails-snippet-caching-expensive-calls/","owner":"Ariejan de Vroom"}]