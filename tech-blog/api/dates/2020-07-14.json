[{"title":"Engineering Failover Handling in Uberâ€™s Mobile Networking Infrastructure","description":null,"link":"https://eng.uber.com/eng-failover-handling/","owner":"Uber"},{"title":"How to Make the Most out of Code Reviews","description":"","link":"https://buildingvts.com/how-to-make-the-most-out-of-code-reviews-53ba14a11948?source=rss----f76c28ec6a84---4","owner":"VTS"},{"title":"Networked games: Playing in the past or future","description":"<p>A few years ago I was fascinated by how network games worked after reading a <a href=\"https://gafferongames.com/post/introduction_to_networked_physics/\">series of articles about Networked Physics that includes some great demo movies</a>. I didn't really understand it. How can the game be playable, when the client and server are separated by approximately 100 ms of network delay? I decided to create a small demo of a networked game, to try and figure it out. However, like most projects I start, I abandoned it after spending a few hours on it. I rediscovered it a couple months ago, and got it to a reasonably &quot;finished&quot; state. <a href=\"http://evanjones.ca/network-game-simulation-demo.html\">The demo shows the client and server state of a &quot;game&quot; and lets you adjust the simulated latency</a>. This gave me a huge appreciation for clever tricks used to create fast-paced games that are playable over the Internet. In particular, I find it amazing that the clients are playi","link":"https://www.evanjones.ca/network-game-simulation.html","owner":"Evan Jones"},{"title":"Systems Performance: Enterprise and the Cloud, 2nd Edition","description":"\n\n\n","link":"http://www.brendangregg.com/blog/2020-07-15/systems-performance-2nd-edition.html","owner":"Brendan Gregg"}]