[{"title":"Automating App Store Screenshots","description":"","link":"http://engineering.khanacademy.org/posts/automating-app-store-screenshots.htm","owner":"Khan Academy"},{"title":"Cut Code Review Noise on GitHub","description":"<p><center>\n<img src=\"/assets/scissors.jpg\" alt=\"\">\n<em><a href=\"https://www.flickr.com/photos/9918311@N02/4268582634/in/photostream/\">Painting scissors with light 4 by Zechariah  Judy, on Flickr</a></em>\n</center></p>\n\n<p>For this post I&#39;m not going to detail my preferred approach for working through a source code change using GitHub&#39;s pull requests -- another post will likely contain this. I&#39;m instead going to touch on GitHub&#39;s review requests feature, and present an effective and efficient way to handle code reviews with GitHub&#39;s interface.</p>\n\n<h2>GitHub Review Requests and Reactions</h2>\n\n<p>GitHub, in late 2016, introduced <a href=\"https://github.com/blog/2291-introducing-review-requests\">review requests</a> to their platform. This was a welcome addition to code reviewing pull requests. It exposed a mechanism to request reviews without using <em>@mention</em> or chat to get people&#39;s attention.</p>\n\n<p>GitHub made it easier to identify pull requests that r","link":"https://techblog.thescore.com/2017/03/28/cut-code-review-noise-on-github/","owner":"theScore"},{"title":"Daily Tech Video: Status update","description":null,"link":"https://dailytechvideo.com/daily-tech-video-status-update/","owner":"Daily Tech Video"},{"title":"Practical Services Monitoring with Prometheus and Docker","description":"","link":"https://airtame.engineering/practical-services-monitoring-with-prometheus-and-docker-30abd3cf9603?source=rss----85ad138e3d46---4","owner":"Airtame"},{"title":"Sandboxing landscape","description":"","link":"https://idea.popcount.org/2017-03-28-sandboxing-landscape","owner":"Marek Majkowski"},{"title":"TPDP Episode #13: The Go Programming Language And Modern Development","description":"\n                    <p>I am pleased to announce that the latest episode of The Polyglot Developer Podcast has been published to all the popular podcasting networks which include, but are not limited to, iTunes and Pocket Casts. In this episode titled, <strong>The Go Programming Language and Where it Fits in Modern Development</strong>, I am joined by Go advocate, <a href=\"https://twitter.com/mholt6\">Matt Holt</a>, where we discuss Go as an option to modern development.</p>\n<p>In this episode we discuss where Go excels and how it compares to other popular development technologies such as PHP and Node.js.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2017/03/tpdp-episode-13-go-programming-language-modern-development/'>TPDP Episode #13: The Go Programming Language And Modern Development</a> appeared first on <a rel='nofollow' href='https://www.thepolyglotdeveloper.com'>The Polyglot Developer</a>.</p>\n            ","link":"https://www.thepolyglotdeveloper.com/2017/03/tpdp-episode-13-go-programming-language-modern-development/","owner":"Nic Raboy"},{"title":"Using Proxies with Redux Types","description":"<p>One of the most common problems that I run into when using Redux is trying to figure out why an action is not being captured by a reducer.  For someone just getting starting with Redux, debugging this issue can be especially overwhelming because of how Redux manages data flow.  So before you start pouring over configuration code, or the logic contained in your action creators and reducers, please, make sure your action types are defined and spelled correctly.</p>\n\n<!--more-->\n<p>One of the most common problems that I run into when using Redux is trying to figure out why an action is not being captured by a reducer.  For someone just getting starting with Redux, debugging this issue can be especially overwhelming because of how Redux manages data flow.  So before you start pouring over configuration code, or the logic contained in your action creators and reducers, please, make sure your action types are defined and spelled correctly.</p>\n\n<p>In any application that I have built, mos","link":"https://reactjsnews.com/proxies-with-redux-types","owner":"ReactJS News"}]