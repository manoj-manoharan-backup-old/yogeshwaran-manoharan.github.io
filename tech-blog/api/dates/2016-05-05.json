[{"title":"Copying Interface Values In Go","description":"I am constantly thinking about the Go language and how things work. Lately I have been thinking how everything in Go is by value. We see this when we pass values to functions, when we iterate over slices and when we perform type assertions. In every case, copies of the values that are stored in these data structures are returned. When I first started learning Go this threw me off, but I have come to appreciate the reasonability this brings to our code.","link":"https://www.ardanlabs.com/blog/2016/05/copying-interface-values-in-go.html","owner":"William Kennedy"},{"title":"Getting Started with Django REST Framework (DRF) and AngularJS (Part 3)","description":"<p><strong>Read: <a href=\"/blog/getting-started-drf-angularjs-part-1/\">Part 1 - Initial Project Setup</a></strong> and <a href=\"/blog/getting-started-drf-angularjs-part-2/\">Part 2 - Django Models and the ORM</a></p>\n<p><strong>Write: <a href=\"https://github.com/TrackMaven/getting-started-with-drf-angular/tree/part-3\">Part 3 Supplementary Code</a></strong></p>\n<p>This is the third installment in a multi-part series geared toward getting started with Django Rest Framework (DRF) and AngularJS.  The goal of this series is to create an extensive, RESTful web application that uses DRF in the server and AngularJS in the client.</p>\n<p>This post focuses on the basics of Django REST Framework (DRF), with topics covering</p>\n<ul>\n<li><a href=\"#about\">A Recap and Introduction</a></li>\n<li><a href=\"#serializers\">Serializers</a></li>\n<li><a href=\"#views\">Views</a></li>\n<li><a href=\"#routing\">URL Routing</a></li>\n<li><a href=\"#api\">Using the API</a></li>\n</ul>\n<p>This guide uses Django <code>1.8.5</","link":"http://engineroom.trackmaven.com/blog/getting-started-drf-angularjs-part-3/","owner":"TrackMaven"}]