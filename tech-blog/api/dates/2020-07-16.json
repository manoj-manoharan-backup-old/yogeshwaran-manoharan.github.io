[{"title":"Making Our Code More Inclusive","description":null,"link":"https://engineering.indeedblog.com/blog/2020/07/inclusion-in-code/","owner":"Indeed"},{"title":"Making Time to Save You Time: How We Sped Up Time-Related Syscalls on Dynos","description":"<p>I work on Heroku’s Runtime Infrastructure team, which focuses on most of the underlying compute and containerization here at Heroku. Over the years, we’ve tuned our infrastructure in a number of ways to improve performance of customer dynos and harden security.</p>\n\n<p>We recently received a support ticket from a customer inquiring about poor performance in two <a href=\"https://en.wikipedia.org/wiki/System_call\">system calls</a> (more commonly referred to as syscalls) their application was making frequently: <a href=\"https://manpages.ubuntu.com/manpages/bionic/man2/clock_getres.2.html\"><code>clock_gettime(3)</code></a> and <a href=\"https://manpages.ubuntu.com/manpages/bionic/man2/gettimeofday.2.html\"><code>gettimeofday(2)</code></a>.</p>\n\n<p>In this customer’s case, they were using a tool to do transaction tracing to monitor the performance of their application. This tool made many such system calls to measure how long different parts of their application took to execute. Unfortunat","link":"https://blog.heroku.com/clocksource-tuning","owner":"Heroku"},{"title":"Support for PlayStation 4, PlayStation 5 and Xbox One, Series X and Series S Gaming Consoles","description":null,"link":"https://backtrace.io/blog/gaming/support-for-gaming-consoles/","owner":"Backtrace"},{"title":"Two Years, Two Tips ✌","description":"","link":"https://medium.com/yld-blog/two-years-two-tips-c452bbd2759e?source=rss----39c536548b9a---4","owner":"YLD!"},{"title":"Using Lateral Joins for Business Analytics in CockroachDB 20.1","description":"CockroachDB&#x2019;s 20.1 release supports lateral joins, which can dramatically reduce the lines of code needed to arrive at key business analytics. Today, I&#x2019;m going to walk you through a demo of lateral joins and showcase how you might use them to run analytic queries directly in CockroachDB.\nWhat&#x2019;s a lateral join? A lateral join is a type of correlated subquery that allows data sources to reference columns provided by previous data sources in the same query.","link":"https://www.cockroachlabs.com/blog/using-lateral-joins-in-the-cockroachdb-20-1-alpha/","owner":"CockroachDB"},{"title":"What's New in CockroachDB’s Cost-Based Query Optimizer","description":"In 2018, CockroachDB implemented a cost-based query optimizer from scratch, which has been steadily improved in each release. The query optimizer is the part of the system that understands the semantics of SQL queries and decides how to execute them; execution plans can vary wildly in terms of execution time, so choosing a good plan is important. In this post we go over some of the optimizer-related improvements in CockroachDB v20.","link":"https://www.cockroachlabs.com/blog/cost-based-optimizer-20-1/","owner":"CockroachDB"}]