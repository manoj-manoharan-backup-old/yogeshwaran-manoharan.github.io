[{"title":"Mid-stack inlining in Go","description":"In the previous post I discussed how leaf inlining allows the Go compiler to reduce the overhead of function calls and extend optimisation opportunities across function boundaries. In this post I’ll discuss the limits of inlining and leaf vs mid-stack inlining. The limits of inlining Inlining a function into its caller removes the call’s overhead","link":"https://dave.cheney.net/2020/05/02/mid-stack-inlining-in-go","owner":"Dave Cheney"},{"title":"Repeat Rate: What are you Actually Measuring?","description":"","link":"https://blog.evantahler.com/repeat-rate-what-are-you-actually-measuring-ddc3ad49ba04?source=rss----6605676e3d60---4","owner":"Evan Tahler"},{"title":"The Convoluted Magic of Leiningen Test Selectors","description":"","link":"https://medium.com/helpshift-engineering/the-convoluted-magic-of-leiningen-test-selectors-2eb6c452dfcf?source=rss----3229f31ca4f4---4","owner":"Helpshift"},{"title":"The Voom Software Engineering Interview Process","description":"","link":"https://blog.evantahler.com/the-voom-software-engineering-interview-process-a93eab6518ed?source=rss----6605676e3d60---4","owner":"Evan Tahler"},{"title":"Tips for Building International Products and Companies","description":"","link":"https://blog.evantahler.com/tips-for-building-international-products-and-companies-f800f96b9c31?source=rss----6605676e3d60---4","owner":"Evan Tahler"}]