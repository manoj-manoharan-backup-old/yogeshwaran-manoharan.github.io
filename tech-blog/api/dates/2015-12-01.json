[{"title":"Mocking Mistakes","description":"<p>I've discussed the value of using Python's <code>mock</code> library for testing in a couple of previous articles <a href=\"http://engineroom.trackmaven.com/blog/making-a-mockery-of-python/\">Making a Mockery of Python</a> and <a href=\"http://engineroom.trackmaven.com/blog/real-life-mocking/\">Real Life Mocking</a>. Recently, however, a <a href=\"http://engineroom.trackmaven.com/blog/real-life-mocking/#comment-2310097361\">kind commenter</a> brought to my attention an insidious error in my example code. Having looked into this sneaky mistake, I wanted to briefly discuss it - hopefully I can prevent other developers encountering similar pitfalls!</p>\n<h2>Mock mocks everything</h2>\n<p>The best way to explain the mistake is to look closely at an intended property of mock objects: whatever method or property we request from them, they will happily oblige us, regardless of whether that method/property exists on the object we are mocking. If we have explicitly set a <code>return_value</code> f","link":"http://engineroom.trackmaven.com/blog/mocking-mistakes/","owner":"TrackMaven"}]