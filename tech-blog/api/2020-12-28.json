[{"title":"6 Small Unit Testing Tips","description":"Choosing test values when writing unit tests is mostly guided by the need to cover all cases of the program logic. However, some values are better than others. Here are a few tips on how to pick values that make … ","link":"https://henrikwarne.com/2020/12/28/6-small-unit-testing-tips/","owner":"Henrik Warne"},{"title":"Durability: Cloud applications","description":"<p>When designing applications that store critical data, it is to important to ensure the data will be durable, so it is accessible after a failure. To better understand the guarantees provided by modern systems, I previously wrote about the <a href=\"http://evanjones.ca/durability-nvme.html\">durability guarantees provided by the NVMe disk interface</a>, and by <a href=\"http://evanjones.ca/durability-filesystem.html\">Linux file APIs</a>. In this article, I will describe what I know about durable writes available on cloud infrastructure. In particular, I will look at AWS and Google Cloud, since I know them the best. After reading their documentation carefully, my cloud storage durability recommendations are:</p>\n\n<ul>\n<li>Instance storage can be lost when the machine is restarted by the cloud provider. I would only call it durable if the application is replicated across more than one zone. Don't bother replicating across machines in one zone, since your data will be lost when the whole z","link":"https://www.evanjones.ca/durability-cloud.html","owner":"Evan Jones"},{"title":"Egress Filtering Benchmark Part 2: Calico and Cilium","description":"In a recent blog post , we compared three different technical approaches to filtering egress traffic on Linux: IP tables, IP sets, and BPF. While that provided some interesting baseline benchmarks of the core Linux technologies, we wanted to go beyond that to look at how one would implement such filters in practice, using off-the-shelf cloud native network policy solutions.\nIn the realm of the Cloud Native, it is not far-fetched to imagine a Kubernetes cluster needing egress filtering for controlling the traffic (host or pod) attempting to leave the network to possibly wild and dangerous endpoints on the internet.","link":"/blog/2020/12/egress-filtering-benchmark-part-2-calico-and-cilium/","owner":"Kinvolk"},{"title":"Lock upstream Docker images to specific revisions","description":"","link":"https://tech.lendinghome.com/lock-upstream-docker-images-to-specific-revisions-6ed4d5e9a2fd?source=rss----68f0e2ba19fc---4","owner":"LendingHome"},{"title":"What Day Had The Most CVEs Published?","description":"That was the simple question I asked myself on Saturday morning, thinking the answer would likely be simple to find. It wasn’t and ended up 48 hours later with me building this jupyter notebook to find out. I really thought it would be as easy as pulling down the NVD data feeds and running a simple nvd['Published'].value_counts().head(10) to find out that 1098 of 146450 CVEs were published on 2004-12-31. I even produced a nice little graph: Except, looking at it, that data didn’t make much sense. With some more research and help, it became clear the data quality from NVD is pretty poor. Using a tool called MissingNo to get a visualization makes it obvious that only about half the CVEs in the data are complete: When you drop CVEs that are missing the CVSS BaseScore to clean up the data here is what the new graph looks like: The “best” answer to What Day Had The Most CVEs published appears to be 2020-04-15 with 508 of 72964 CVEs published that date. Here is what the top 10 days looks lik","link":"https://jerrygamblin.com/2020/12/28/what-day-had-the-most-cves-published/","owner":"Jerry Gamblin"}]