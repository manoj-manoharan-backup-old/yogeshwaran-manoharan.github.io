[{"title":"Algorithms interviews: theory vs. practice","description":"\n\n<p>When I ask people at trendy big tech companies why algorithms quizzes are mandatory, the most common answer I get is something like &quot;we have so much scale, we can't afford to have someone accidentally write an <code>O(n^2)</code> algorithm and bring the site down&quot;<sup class=\"footnote-ref\" id=\"fnref:A\"><a rel=\"footnote\" href=\"#fn:A\">1</a></sup>.  One thing I find funny about this is, even though a decent fraction of the value I've provided for companies has been solving phone-screen level algorithms problems on the job, I can't pass algorithms interviews! When I say that, people often think I mean that I fail half my interviews or something. It's more than half.</p>\n\n<p>When I wrote a draft blog post of my interview experiences, draft readers panned it as too boring and repetitive because I'd failed too many interviews. I should summarize my failures as a table because no one's going to want to read a 10k word blog post that's just a series of failures, they said (which i","link":"https://danluu.com/algorithms-interviews/","owner":"Daily Tech Video"}]