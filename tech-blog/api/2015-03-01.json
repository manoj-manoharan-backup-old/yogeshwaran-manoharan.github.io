[{"title":"Create A Todo List Mobile App Using Ionic Framework","description":"\n                    <p>Since writing my two tutorials regarding using <a href=\"https://www.thepolyglotdeveloper.com/2014/11/use-sqlite-instead-local-storage-ionic-framework/\">SQLite in Ionic Framework</a> and shipping an app with a <a href=\"https://www.thepolyglotdeveloper.com/2015/01/deploy-ionic-framework-app-pre-filled-sqlite-db/\">pre-populated database</a>, Iâ€™ve received many requests for a tutorial for making a full blown app. I listen to my readers, so I figured what better way to show such an example, than to create a todo-list type application.</p>\n<p>In this tutorial, I hope to accomplish the following:</p>\n<ul>\n<li>Shipping a pre-populated / pre-filled SQLite database</li>\n<li>Access the SQLite database and perform operations based on user input</li>\n<li>Include a WebSQL alternative for testing via a web browser</li>\n<li>Navigate between views using the AngularJS UI-Router</li>\n<li>Remove todo items from your list using swipe gestures</li>\n</ul>\n<p>All items that I wish to a","link":"https://www.thepolyglotdeveloper.com/2015/03/create-todo-list-mobile-app-using-ionic-framework/","owner":"Nic Raboy"},{"title":"RyuJIT CTP5 and loop unrolling","description":"<p>RyuJIT will be available soon. It is a next generation JIT-compiler for .NET-applications. Microsoft likes to tell us about the benefits of SIMD using and JIT-compilation time reducing. But what about basic code optimization which is usually applying by a compiler? Today we talk about the loop unrolling (unwinding) optimization. In general, in this type of code optimization, the code</p>\n<div class=\"highlight\"><pre class=\"chroma\"><code class=\"language-cs\" data-lang=\"cs\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"m\">1024</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"n\">Foo</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n</code></pre></div><p>transforms to</p>\n<div class=\"highlight\"><pre class=\"chroma\"><code","link":"https://aakinshin.net/posts/ryujit-ctp5-and-loop-unrolling/","owner":"Andrey Akinshin"}]