[{"title":"How to display a \"new version available\" for a Progressive Web App","description":"In this article, I will show you how to add a notification to your site and display it each time that there is a new version of the service worker available. Youâ€™ll also learn how to refresh the page, so that the user is up to date and has the latest version of any cached files.","link":"https://34.220.116.254:80/displaying-a-new-version-available-progressive-web-app/","owner":"David Walsh"},{"title":"Maintain Data Relationships Through Resolvers With GraphQL In A Golang Application","description":"\n                    <p>I recently wrote about <a href=\"https://www.thepolyglotdeveloper.com/2018/05/getting-started-graphql-golang/\">getting started with GraphQL in a Golang application</a>, where I discussed the creation of schemas, executing queries, and mutating data, even though it was all mock data. In this example there were queries for related data, but they were constructed in a very independent form.</p>\n<p>We&rsquo;re going to see how to query for related data, similar to what you&rsquo;d find in a <code>JOIN</code> operation on a relational database, but using <a href=\"https://graphql.org/\">GraphQL</a> and the Go programming language.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2018/05/maintain-data-relationships-resolvers-graphql-golang-application/'>Maintain Data Relationships Through Resolvers With GraphQL In A Golang Application</a> appeared first on <a rel='nofollow' href='https://www.thepoly","link":"https://www.thepolyglotdeveloper.com/2018/05/maintain-data-relationships-resolvers-graphql-golang-application/","owner":"Nelson Elhage"}]