[{"title":"Deep Learning With Keras: Recommender Systems","description":"kg-card-begin: markdown","link":"https://www.johnwittenauer.net/deep-learning-with-keras-recommender-systems/","owner":"John Resig"},{"title":"Introducing CockroachDB 19.1","description":"It&#x2019;s been a little over four years since we started our mission to deliver an enterprise-ready distributed SQL database.\nToday, we&#x2019;re excited to release CockroachDB 19.1. With this release, we enhanced distributed SQL capabilities, and expanded upon enterprise-grade features for security and data integrations. 19.1 continues to solve the challenge of complex, distributed SQL while meeting all the&#xA0;&#x201C;enterprise&#x201D; requirements that are expected of a database.\nHere&#x2019;s Nate Stewart, our VP of Product, with a quick intro on what you can expect in CockroachDB 19.","link":"https://www.cockroachlabs.com/blog/cockroachdb-19dot1-release/","owner":"Cloudflare"},{"title":"Reducing variability in performance tests on EC2: Setup and Key Results","description":"On the MongoDB Performance team, we use EC2 to run daily system performance \r\ntests. After building a continuous integration system for performance \r\ntesting, we realized that there were sources of random variation in our \r\nplatform and system configuration which made a lot of our results \r\nnon-reproducible. The run to run variation from the platform was bigger \r\nthan the changes in MongoDB performance that we wanted to capture. To \r\nreduce such variation - environmental noise - from our test configuration, \r\nwe set out on a project to measure and control for the EC2 environments on \r\nwhich we run our tests.","link":"https://engineering.mongodb.com/post/reducing-variability-in-performance-tests-on-ec2-setup-and-key-results","owner":"Mixpanel"},{"title":"Repeatable performance tests: CPU options are best disabled","description":"In an effort to improve repeatability, the MongoDB Performance team set out \r\nto reduce noise on several performance test suites run on EC2 instances. \r\nAfter thinking about our assumptions and the experiment setup, we began by \r\nrecording data about our current setup and found no evidence of \r\nparticularly good or bad EC2 instances. In the next step, we investigated \r\nIO and found that EBS instances are the stable option for us. Having found \r\na very stable behavior as far as disks were concerned, this third and final \r\nexperiment turns to tuning CPU related knobs to minimize noise from this \r\npart of the system.","link":"https://engineering.mongodb.com/post/repeatable-performance-tests-cpu-options-are-best-disabled","owner":"Mixpanel"},{"title":"Repeatable performance tests: EBS instances are the stable option","description":"In an effort to improve repeatability, the MongoDB Performance team set out \r\nto reduce noise on several performance test suites run on EC2 instances. \r\nAfter thinking about our assumptions and the experiment setup, we began by \r\nrecording data about our current setup and found no evidence of \r\nparticularly good or bad EC2 instances. However, we found that the results \r\nof repeated tests had a high variance. Given our test data and our \r\nknowledge of the production system, we had observed that many of the \r\nnoisiest tests did the most IO (being either sensitive to IO latency, or \r\nbandwidth). After performing the first baseline tests, we therefore decided \r\nto focus on IO performance through testing both AWS instance types and IO \r\nconfiguration on those instances.","link":"https://engineering.mongodb.com/post/repeatable-performance-tests-ebs-instances-are-the-stable-option","owner":"Mixpanel"},{"title":"Repeatable performance tests: EC2 instances are neither good nor bad","description":"In an effort to improve repeatability, the MongoDB Performance team set out \r\nto reduce noise on several performance test suites run on EC2 instances. At \r\nthe beginning of the project, it was unclear whether our goal of running \r\nrepeatable performance tests in a public cloud was achievable. Instead of \r\ndebating the issue based on assumptions and beliefs, we decided to measure \r\nnoise itself and see if we could make configuration changes to minimize it.\r\n\r\nAfter thinking about our assumptions and the experiment setup, we began by \r\nrecording data about our current setup.","link":"https://engineering.mongodb.com/post/repeatable-performance-tests-ec2-instances-are-neither-good-nor-bad","owner":"Mixpanel"}]