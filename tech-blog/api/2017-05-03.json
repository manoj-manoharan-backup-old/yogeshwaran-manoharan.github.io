[{"title":"Breaking the WiredTiger Logjam: The Write-Ahead Log (1/2)","description":"Code can't be optimized; it can only be optimized for a set of conditions. \r\nWhen conditions change, optimizations can become bottlenecks, and when that \r\nhappens, a thorough audit of assumptions might well hold the key to the \r\nsolution.\r\n\r\nThe WiredTiger write-ahead log exemplifies this principle. It’s a critical \r\ncodepath within a high-performance storage engine, and I have optimized it \r\nheavily to avoid I/O and locking. But some of the conditions I had \r\ninitially targeted became invalid when WiredTiger became a storage engine \r\nin MongoDB. When a colleague of mine investigated a case of negative \r\nscaling found during testing, he uncovered a serious bottleneck in the \r\nwrite-ahead log… call it a \"logjam\". That investigation ultimately led us \r\nto rethink our assumptions and optimize for new conditions. We validated \r\nthe new approach with a quick prototype, and then covered all the \r\nintricacies and edge cases to produce a fully realized solution.\r\n\r\nIn part one of this two-part","link":"https://engineering.mongodb.com/post/breaking-the-wiredtiger-logjam-the-write-ahead-log-1-2","owner":"Mixpanel"},{"title":"Cardstack Architecture Notes","description":"kg-card-begin: markdown","link":"https://eaf4.com/cardstack-architecture-notes/","owner":"Edgar Aroutiounian"},{"title":"Wingify Hackathon - Sum It Up","description":"I am a frontend developer at Wingify and I am building a really awesome product, PushCrew. Last month, we had a hackathon. The idea was to…","link":"https://engineering.wingify.com//posts/wingify-hackathon-sum-it-up/","owner":"Wimdu"}]