[{"title":"When is your code DRY enough?","description":"<p dir=\"ltr\">You're aware that <a href=\"http://blog.8thcolor.com/en/2013/06/duplication-is-a-rampant-disease/\">duplication is a rampant disease</a>: more code, more fragile, less maintainable, less readable. You even use <a href=\"http://ruby.sadi.st/Flay.html\">one</a> or <a href=\"https://pullreview.com\">another tool</a> and make <a href=\"http://blog.8thcolor.com/en/2013/10/we-dont-have-time-for-code-reviews/\">your code reviewed</a> to find most of them.</p>\n<p dir=\"ltr\"><strong>When facing some duplicate code, you're not always feeling comfortable to dry it up.</strong> You're not even sure you'll keep - as is - the code you've just wrote. By experience, you don't want to spend a whole day to end, maybe, with an abstract solution end to reason about.</p>\n<p dir=\"ltr\">Should you avoid similar <em>create</em> actions in different Rails controllers? Should you use metaprogramming and avoid long similar case expressions? What about recurring pattern in your Rails routes? Or multiple repeti","link":"http://blog.8thcolor.com/en/2014/04/when-is-your-code-dry-enough/","owner":"PubNub:"}]