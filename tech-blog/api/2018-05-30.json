[{"title":"Gripes with Google Groups","description":"<p>If you’re like me, you think of Google Groups as the Usenet client turned\nmailing list manager. If you’re a GCP user or maybe one of a handful of SAML users you probably\nknow Google Groups as an access control mechanism. The bad news is we’re both\nright.</p>\n\n<p>This can blow up if permissions on those groups aren&rsquo;t set right. Your groups\nwere probably originally created by a sleep-deprived founder way before anyone\nwas worried about access control. It&rsquo;s been lovingly handcrafted and never\naudited ever since. Let’s say their configuration is, uh, “inconsistent”. If an\nadministrator adds people to the right groups as part of their on-boarding, it’s\nnot obvious when group membership is secretly self-service. Even if someone\ncan&rsquo;t <em>join</em> a group, they might still be able to read it.</p>\n\n<p>You don’t even need something using group membership as access control for this\nto go south. The simplest way is a password reset email. (Having a list of all\nof your vendor","link":"https://latacora.micro.blog/gripes-with-google/","owner":"Kolosek"},{"title":"Linux bcc/eBPF tcpdrop","description":"While debugging a production issue of kernel-based TCP packet drops, I remembered seeing a new function added in Linux 4.7 by Eric Dumazet (Google) called tcp_drop(), which I can trace using kprobes and bcc/eBPF. This lets me fetch extra context to explain why these drops are happening. Eg:\n","link":"http://www.brendangregg.com/blog/2018-05-31/linux-tcpdrop.html","owner":"Brendan Eich"}]