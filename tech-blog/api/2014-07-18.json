[{"title":"Download Remote Files Without A Browser In Android","description":"\n                    <p>There is often a scenario where you need to download files from a server onto the Android device. This needs to be done without forcing the user to launch a web browser and have interaction as some of the downloaded data might be private. Let’s use the scenario where you’ve made a game and you have in-app purchases. You want to keep the size of the game small for everyone so you decide to put the purchase items on your server. When a user purchases an item then the item will be downloaded in the background. This is a perfect usage example.</p>\n<p>For purposes of the tutorial we will be staying simple. We will be downloading a remote image in the background and then displaying it when it has finished downloading.</p>\n                    \n                        <p>The post <a rel='nofollow' href='https://www.thepolyglotdeveloper.com/2014/07/download-remote-files-without-browser-android/'>Download Remote Files Without A Browser In Android</a> appeared first on <a ","link":"https://www.thepolyglotdeveloper.com/2014/07/download-remote-files-without-browser-android/","owner":"Nelson Elhage"},{"title":"Simple top-down development in OCaml","description":"<p>Often when writing a new module, I want to write the interface first and save\nthe implementation for later. This lets me use the module as a black box,\nextending the interface as needed to support the rest of the program. When\neverything else is finished, I can fill in the implementation, knowing the full\ninterface I need to support. Of course sometimes the implementation needs to\npush back on the interface – this pattern isn’t an absolute – but it’s certainly\na useful starting point. The trick is getting the program to compile at\nintermediate stages when the implementation hasn’t been filled in.</p>\n\n","link":"https://blog.janestreet.com/simple-top-down-development-in-ocaml/","owner":"InVision"}]