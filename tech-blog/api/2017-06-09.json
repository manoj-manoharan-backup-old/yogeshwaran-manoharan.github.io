[{"title":"Connecting to Snowflake with Ruby on Rails","description":"kg-card-begin: markdown","link":"https://eng.localytics.com/connecting-to-snowflake-with-ruby-on-rails/","owner":"Localytics"},{"title":"Convert APNS Tokens To FCM Tokens With Simple HTTP APIs","description":"\n                    <p>Not too long ago I wrote a guest post regarding push notifications with the Firebase Cloud Messaging (FCM) service at the <a href=\"http://developer.telerik.com/products/nativescript/use-firebase-cloud-messaging-nativescript-app/\">Telerik Developer Network</a>. While that previous article was directly related to using FCM within a <a href=\"https://www.nativescript.org/\">NativeScript</a> application, it followed all the same rules that are required for any mobile development platform. There is a catch, however. The push notification plugin for NativeScript uses FCM for Android and Apple’s Push Notification Service (APNS) for iOS, which can be confusing as you’re then working with two different services.</p>\n<p>It often makes sense to use a service like Firebase Cloud Messaging for both Android and iOS to make the application a little less complex. We’re going to see how to convert APNS tokens into FCM tokens using some available Google APIs and HTTP.</p>\n         ","link":"https://www.thepolyglotdeveloper.com/2017/06/apns-tokens-fcm-tokens-simple-http/","owner":"Nic Raboy"},{"title":"Measuring Performance Improvements in .NET Core with BenchmarkDotNet (Part 1)","description":"<p>A few days ago <a href=\"https://github.com/stephentoub\">Stephen Toub</a> published a great post\nat the <a href=\"https://blogs.msdn.microsoft.com/dotnet/\">Microsoft .NET Blog</a>:\n<a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/06/07/performance-improvements-in-net-core/\">Performance Improvements in .NET Core</a>.\nHe showed some significant performance changes in .NET Core 2.0 Preview 1 (compared with .NET Framework 4.7).\nThe .NET Core uses RyuJIT for generating assembly code.\nWhen I first tried RyuJIT (e.g.,\n<a href=\"https://blogs.msdn.microsoft.com/dotnet/2014/02/27/ryujit-ctp2-getting-ready-for-prime-time/\">CTP2</a>,\n<a href=\"https://blogs.msdn.microsoft.com/clrcodegeneration/2014/10/30/ryujit-ctp5-getting-closer-to-shipping-and-with-better-simd-support/\">CTP5</a>, 2014),\nI wasn&rsquo;t excited about this: the preview versions had some bugs, and it worked slowly on my applications.\nHowever, the idea of a rethought and open-source JIT-compiler was a huge step forward and inve","link":"https://aakinshin.net/posts/stephen-toub-benchmarks-part1/","owner":"Andrey Akinshin"}]