[{"title":"Documentation: itâ€™s more than words","description":"","link":"https://medium.com/zendesk-engineering/documentation-its-more-than-words-a808fae6f005?source=rss----a88376ea904a---4","owner":"ZeeMee"},{"title":"Going faster than TensorFlow with Clojure","description":"<p>\nA few weeks ago I've shown you how simple Clojure's\n<a href=\"https://github.com/uncomplicate/deep-diamond\">Deep Diamond</a>(<iframe class=\"github-btn\" src=\"https://ghbtns.com/github-btn.html?user=uncomplicate&amp;repo=deep-diamond&amp;type=watch&amp;count=true\" width=\"100\" height=\"20\" title=\"Star on GitHub\" frameBorder=\"0\"></iframe>) is, even compared to Keras. I've also mentioned\nthat it's superfast, and you probably didn't believe me. Let's quickly\ncompare the training time of the same convolutional neural network\nin Clojure and Keras!\n</p>\n\n<div id=\"outline-container-org91c6d2a\" class=\"outline-2\">\n<h2 id=\"org91c6d2a\">TL;DR Deep Diamond is much faster</h2>\n<div class=\"outline-text-2\" id=\"text-org91c6d2a\">\n<p>\nIn this article, we're only measuring the performance on the CPU. Both libraries,\nDeep Diamond, and Keras with TensorFlow use <a href=\"https://github.com/oneapi-src/oneDNN\">Intel's oneDNN</a> low level performance\nlibrary under the hood, and I confirmed that both installatio","link":"http://dragan.rocks/articles/20/Going-faster-than-TensorFlow-with-Clojure","owner":"Dot Dev (.dev)"},{"title":"Introducing the Venmo Credit Card","description":null,"link":"http://blog.venmo.com/hf2t3h4x98p5e13z82pl8j66ngcmry/2020/10/1/introducing-the-venmo-credit-card","owner":"Vena Solutions"}]