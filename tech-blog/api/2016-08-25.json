[{"title":"APIs supporting snake_case and camelCase with Rails","description":"Recently, for one of our clients, we encountered one interesting problem. Their stack is Rails + React, where Rails is for providing APIs, and React is for consuming those APIs. Frontend team prefers API payloads to be in camelCase. There are existing npm modules which can automatically convert snakecase to camelCase, but (un)fortunately front-end team is not using those.\nWe use AMS (active model serializers) to generate json responses. We are dealing with Rails 3, and app cannot be upgraded :).","link":"https://crypt.codemancers.com/posts/2016-03-25-api-transformations-in-rails/","owner":"Codelitt"},{"title":"Secure Your Web Application @JSChannel Conference ’16","description":"Recently, I spoke about securing Web Applications at JSChannel Conference ’16. The conference venue was The Ritz-Carlton, Bangalore…","link":"https://engineering.wingify.com//posts/secure-your-web-apps/","owner":"Wimdu"},{"title":"Why Can’t I Run a 100-Node CockroachDB Cluster?","description":"``` CockroachDB is designed to be a scalable, survivable, and strongly consistent SQL database. Building a distributed system with these capabilities is a big task. Beyond the required functionality, it must also be correct, performant, and stable, or it isn&#x2019;t worth the bits used to copy the binary.\n``` From the start, our approach was to focus first on correctness, as it always proves the most difficult to retrofit, next on performance for single nodes, and then on stability and performance for multi-node clusters.","link":"https://www.cockroachlabs.com/blog/cant-run-100-node-cockroachdb-cluster/","owner":"Cloudflare"}]