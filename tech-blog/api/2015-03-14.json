[{"title":"Using Djinni for Cross-Platform Mobile Development","description":"<p>One of the issues we face developing our mobile app for both Android and iOS is a significant amount of code duplication between the two platforms. They provide the same functionality, they talk to the same server, and they store the same information, but that’s where the similarity ends. The implementations don’t just differ by being written in different languages (Java vs. Objective-C); for historical reasons, they also have remarkably different architectures and store information in different ways.</p>\n\n<p>As a result of these differences below the surface, we occasionally see inconsistent behaviour between the two apps. Bad data from the server might go unnoticed on one platform where it’s handled gracefully, while it could crash the other, or even lead to subtle data corruption. To accomplish the same task, the two apps might call different sets of APIs or pass them different parameters. Bugs in general are also a major problem: We’re implementing the same functionality twice, ","link":"https://engineering.wattpad.com/post/113544887477","owner":"Wattpad"}]