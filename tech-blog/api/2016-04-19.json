[{"title":"React's JSX Doesn't Violate Separation of Concerns","description":null,"link":"http://blog.andrewray.me/youre-missing-the-point-of-jsx/","owner":"Andrew Brampton"},{"title":"Using State Machines to Handle Workflows","description":"<p>Have you registered for a new user account in an app before? How about adding your payment info for buying something online? Those are two examples of what a “workflow” can be. Workflows are usually associated with a set of screens that appear in different orders depending on what the user selects. For example, registering with Facebook vs. email can change the sequence and number of screens presented to the user. We will demonstrate how state machines can be used to handle this logic in an iOS app.</p>\n\n<h2>What are state machines?</h2>\n\n<p>State machines contain a set of states with transitions between them. Each transition corresponds to an event, and when the event occurs, the state machine moves from one state to the next. For handling workflows, we will be using a finite state machine. Below is an abstract example.</p>\n\n<p><img src=\"http://i.imgur.com/4B4cs7g.png\" alt=\"Imgur\"></p>\n\n<p>The left arrow pointing into <strong>State A</strong> denotes the initial state. When moving ","link":"https://techblog.thescore.com/2016/04/19/using-state-machines-to-handle-workflows/","owner":"Teespring"}]